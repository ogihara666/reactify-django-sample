{"version":3,"sources":["components/FillingCell.js","components/BlankCell.js","components/ScheduleCell.js","components/ScheduleHeader.js","components/ClockLine.js","components/ScheduleRow.js","actions/api_actions.js","actions/types.js","actions/form_actions.js","components/RoomChoice.js","components/TimeSelect.js","containers/PostForm.js","components/ScheduleTimeRow.js","containers/Schedules.js","actions/general_action.js","containers/Editform.js","App.js","serviceWorker.js","reducers/apiReducers.js","reducers/formReducers.js","reducers/generalReducers.js","reducers/index.js","store.js","Root.js","index.js"],"names":["FillingCell","props","schedule","cellWidth","react_default","a","createElement","class","key","style","height","concat","cellHeight","ListItem_default","button","width","margin","padding","backgroundColor","borderRadius","boxSizing","zIndex","onClick","clickAction","uuid","userName","content","BlankCell","index","targetDatetime","time","roomId","className","ScheduleCell","components_BlankCell","postEvent","components_FillingCell","editEvent","ScheduleHeader","ClockLine","top","ScheduleRow","fillingList","i","push","scheduleList","Number","components_ScheduleHeader","components_ClockLine","map","components_ScheduleCell","timeList","urlBase","headers","Content-Type","fetchAllSchedules","datetime","dispatch","_getFromDate","then","responseData","schedulesLocal","_parseSchedules","type","payload","targetDate","moment","url","format","fetch","method","response","ok","Error","statusText","json","schedulesArray","1","2","3","4","5","6","7","8","data","startTime","endTime","roomIds","sort","verticalStart","Math","floor","toggleFormVisible","RoomChoice","roomChoiceArray","choiceElements","indexOf","Fragment","name","id","value","e","roomCheckAction","target","checked","for","elem","TimeSelect","initialValue","selected","PostForm","backAction","preventDefault","_this","targetYear","targetMonth","registAction","Promise","resolve","reject","sendPost","insertSchedule","changeFormValueAction","changeFormValue","this","bind","formStyle","display","formVisible","components_TimeSelect","split","components_RoomChoice","toggleRoomCheck","placeholder","onChange","Component","connect","state","form","roomSelected","general","Object","defineProperty","postData","insertSchedules","console","log","user_name","start_time","end_time","room_ids","assign","_constructInsertSchedules","body","JSON","stringify","insert_schedules","catch","error","alert","ScheduleTimeRow","Schedules","setInterval","updateTime","_this2","roomIdArray","components_ScheduleTimeRow","components_ScheduleRow","schedules","selectSchedule","toggleEditForm","selectBlank","api","currentHour","currentMinute","add","String","created","edited","_constructRoomSelected","isoWeekday","year","month","date","hour","minute","toToday","today","EditForm","scheduleTouched","editing","sendPatch","patchData","toggleRoomCheckInEditing","changeEditValue","App","containers_Schedules","containers_PostForm","Editform","Boolean","window","location","hostname","match","initialState","roomTouched","currentYear","currentMonth","currentDate","currentDay","targetDay","parseDayToJa","Day","combineReducers","arguments","length","undefined","action","stateNext","k","v","splice","roomIdsEditing","indexEditing","nextState","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","Root","es","children","ReactDOM","render","src_Root","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7d079729.chunk.js","sourcesContent":["import React from \"react\";\nimport ListItem from \"@material-ui/core/ListItem\";\n\nconst FillingCell = props => {\n  if (props.schedule.cellWidth == 0) {\n    // 表示されない幅0のセル\n    return (\n      <div\n        class=\"cell-under\"\n        key={props.key}\n        style={{\n          height: `${props.schedule.cellHeight * 5 +\n            props.schedule.cellHeight * 0.1}rem`\n        }}\n      />\n    );\n  } else if (props.schedule.cellHeight == 0) {\n    // 表示されない高さ0のセル\n    return <div />;\n  } else {\n    return (\n      <ListItem\n        button\n        key={props.key}\n        style={{\n          width: `${props.schedule.cellWidth * 100}%`,\n          margin: 0,\n          padding: 0,\n          backgroundColor: \"#00b8d4\",\n          borderRadius: \"0.4rem\",\n          boxSizing:\"border-box\",\n          \n        }}\n      >\n        <div\n          class=\"li-fillingCell\"\n          style={{\n            height: `${props.schedule.cellHeight * 5}rem`,\n            zIndex: 1\n          }}\n          onClick={() => {\n            \n            props.clickAction(props.schedule.uuid);\n          }}\n        >\n          {props.schedule.userName}\n          <br />「{props.schedule.content}」\n        </div>\n      </ListItem>\n    );\n  }\n};\n\nexport default FillingCell;\n","import React from \"react\";\nimport ListItem from \"@material-ui/core/ListItem\";\nconst BlankCell = props => {\n  if (props.index % 2 == 0) {\n    return (\n      <ListItem\n        style={{ width: \"100%\", margin: 0, padding: 0 }}\n        button\n        onClick={() =>\n          props.clickAction(\n            `${props.targetDatetime} ${props.time}`,\n            props.roomId\n          )\n        }\n        key={props.index}\n      >\n        <div className=\"li-blankCell box-even-black\" />\n      </ListItem>\n    );\n  } else {\n    return (\n      <ListItem\n        style={{ width: \"100%\", margin: 0, padding: 0 }}\n        button\n        onClick={() =>\n          props.clickAction(\n            `${props.targetDatetime} ${props.time}`,\n            props.roomId\n          )\n        }\n        key={props.index}\n      >\n        <div className=\"li-blankCell box-odd-black\" />\n      </ListItem>\n    );\n  }\n};\nexport default BlankCell;\n","import React from 'react';\nimport FillingCell from './FillingCell';\nimport BlankCell from './BlankCell';\n\n\nconst ScheduleCell =(props)=>{\n    if(props.schedule==false){\n        return(<BlankCell key={props.index} index={props.index} clickAction={props.postEvent} time={props.time} targetDatetime={props.targetDatetime} roomId={props.roomId}/>)\n    }else{\n        return(<FillingCell key={props.index} schedule={props.schedule} index={props.index} clickAction={props.editEvent}/>)\n    }\n}\n\nexport default ScheduleCell;","import React from \"react\";\n\nconst ScheduleHeader =(props) =>{\n    return (\n        <div class=\"box-scheduleHeader\">\n        <div class=\"item-scheduleHeader\">会議室{props.roomId}</div>\n        </div>\n    )\n}\nexport default ScheduleHeader;","import React from \"react\";\n\nconst ClockLine = (props)=>{\n    return(\n        <div class=\"box-clockLine\" style={{top:`${props.top}rem`}}></div>\n    )\n}\nexport default ClockLine;","import React from \"react\";\nimport ScheduleCell from \"components/ScheduleCell\";\nimport ScheduleHeader from \"components/ScheduleHeader\";\nimport ClockLine from \"components/ClockLine\";\n\nconst ScheduleRow = props => {\n  const fillingList = [];\n  for (let i = 1; i <= 49; i++) {\n    fillingList.push(false);\n  }\n  const scheduleList = props.scheduleList;\n  for (let key in scheduleList) {\n    fillingList[key] = scheduleList[key];\n    if (scheduleList[key].cellHeight > 1) {\n      for (let i = 1; i < scheduleList[key].cellHeight; i++) {\n        fillingList[Number(key) + i] = {\n          cellHeight: 0\n        };\n      }\n    }\n  }\n  return (\n    <ul class=\"box-scheduleRow\">\n      <ScheduleHeader roomId={props.roomId} />\n      <ClockLine top={20} />\n      {fillingList.map((schedule, index) => {\n        return (\n          <ScheduleCell\n          roomId={props.roomId}\n            schedule={schedule}\n            key={index}\n            index={index}\n            editEvent={props.editEvent}\n            postEvent={props.postEvent}\n            time={props.timeList[index]}\n            targetDatetime={props.targetDatetime}\n          />\n        );\n      })}\n    </ul>\n  );\n};\nexport default ScheduleRow;\n","import {\n  SELECT_DATE,\n  REQUEST_DELETE,\n  SEND_PATCH,\n  SEND_POST,\n  FETCH_ALL_SCHEDULES\n} from \"./types\";\nimport moment from 'moment';\n\n//import moment from \"moment\";\n\nconst urlBase = \"http://35.211.249.14/\";\nconst headers = {\n  \"Content-Type\": \"application/json\"\n};\n\nexport const fetchAllSchedules = datetime => dispatch => {\n  // データ取得\n  _getFromDate(datetime).then(responseData => {\n    const schedulesLocal = _parseSchedules(responseData[\"schedules\"]);\n    dispatch({\n      type: FETCH_ALL_SCHEDULES,\n      payload: schedulesLocal\n    });\n  });\n};\nexport const sendPatch = patchData => dispatch => {\n  const body = JSON.stringify({\n    schedules: {\n      uuid: patchData.uuid,\n      content: patchData.content,\n      user_name: patchData.userName,\n      room_ids: patchData.roomIds,\n      start_time: patchData.startTime,\n      end_time: patchData.endTime\n    }\n  });\n  const url = urlBase + \"reserves\";\n\n  fetch(url, { method: \"PUT\", headers: headers, body: body })\n    .then(response => {\n      if (!response.ok) {\n        throw Error(response.statusText);\n      }\n      return response;\n    })\n    .then(\n      dispatch({\n        type: SEND_PATCH,\n        payload: {}\n      })\n    );\n};\nexport const requestDelete = uuid => dispatch => {\n  const url = urlBase + \"reserves\";\n  const body = JSON.stringify({ uuid: uuid });\n  fetch(url, { method: \"DELETE\", headers: headers, body: body })\n    .then(response => {\n      if (!response.ok) {\n        throw Error(response.statusText);\n      }\n      return response;\n    })\n    .then(\n      dispatch({\n        type: REQUEST_DELETE,\n        payload: {}\n      })\n    );\n  return;\n};\nconst _constructInsertSchedules = postData => {\n  const roomIds = postData.roomIds;\n  console.log(roomIds);\n  let insertSchedules = [];\n  let insertSchedule;\n  const schedule = {\n    user_name: postData.userName,\n    content: postData.content,\n    start_time: postData.startTime,\n    end_time: postData.endTime,\n    room_ids: []\n  };\n  for (let index in roomIds) {\n    if (index == 0) {\n      // 一番目は比べようがないのでそのまま追加\n      schedule.room_ids.push(roomIds[index]);\n    } else {\n      // 連続値ならそのまま追加\n      if (roomIds[index - 1] + 1 == roomIds[index]) {\n        schedule.room_ids.push(roomIds[index]);\n      } else {\n        // そうでない場合これまでの予定を配列に格納し\n        // room_idsキーの値を初期化java\n        insertSchedule = Object.assign({}, schedule)\n        insertSchedules.push(insertSchedule);\n        schedule.room_ids = [roomIds[index]];\n      }\n    }\n  }\n  // 最後のscheduleオブジェクトはループの追加から外れているので追加\n  insertSchedules.push(schedule);\n  return insertSchedules;\n};\nexport const sendPost = postData => dispatch => {\n  const insertSchedules = _constructInsertSchedules(postData);\n\n  const body = JSON.stringify({ insert_schedules: insertSchedules });\n  const url = urlBase + \"reserves\";\n  \n  fetch(url, { method: \"POST\", headers: headers, body: body })\n    .then(response => {\n      if (!response.ok) {\n        throw Error(response.statusText);\n      }\n      return response;\n    })\n    .then(response => {\n      // うまくPOSTできたらもう一度読み込みを行う\n      _getFromDate(postData.startTime).then(responseData => {\n        const schedulesLocal = _parseSchedules(responseData[\"schedules\"]);\n        dispatch({\n          type: SEND_POST,\n          payload: schedulesLocal\n        });\n      });\n    })\n    .catch(error => {\n      alert(error);\n    });\n};\n\nconst _getFromDate = datetime => {\n  // APIにアクセスして特定の日時のデータを取得\n  const targetDate = moment(datetime);\n  const url =\n    urlBase +\n    `reserves/${targetDate.format(\"YYYY\")}/${targetDate.format(\n      \"MM\"\n    )}/${targetDate.format(\"DD\")}`;\n  return fetch(url, { method: \"GET\" })\n    .then(response => {\n      if (!response.ok) {\n        throw Error(response.statusText);\n      }\n      return response;\n    })\n    .then(responseData => {\n      return responseData.json();\n    });\n};\n\nconst _parseSchedules = schedulesArray => {\n  const schedulesLocal = {\n    1: {},\n    2: {},\n    3: {},\n    4: {},\n    5: {},\n    6: {},\n    7: {},\n    8: {}\n  };\n  for (let index in schedulesArray) {\n    // 開始時間と終了時間からセルのサイズを算出する\n    let data = schedulesArray[index];\n    let uuid = data[\"uuid\"];\n    let userName = data[\"user_name\"];\n    let content = data[\"content\"];\n    let startTime = moment(data[\"start_time\"]);\n    let endTime = moment(data[\"end_time\"]);\n    let roomIds = data[\"room_ids\"].sort();\n    let cellWidth = data[\"cell_width\"];\n    let cellHeight = data[\"cell_height\"];\n\n    let verticalStart =\n      Number(startTime.format(\"HH\")) * 2 +\n      Math.floor(Number(startTime.format(\"mm\")) / 30);\n    for (let index in roomIds) {\n      let roomId = roomIds[index];\n      schedulesLocal[roomId][verticalStart] = {\n        uuid: uuid,\n        roomId: roomId,\n        startTime: startTime,\n        endTime: endTime,\n        userName: userName,\n        content: content,\n        cellHeight: cellHeight\n      };\n      // 一度目のiteration以外0になる\n      schedulesLocal[roomId][verticalStart].cellWidth = cellWidth;\n      cellWidth = 0;\n    }\n  }\n  return schedulesLocal;\n};\n","\n\n// Formが変化する\nexport const TOGGLE_FORM_VISIBLE = 'TOGGLE_FORM_VISIBLE';\nexport const SELECT_BLANK = 'SELECT_BLANK';\nexport const SELECT_SCHEDULE = 'SELECT_SCHEDULE';\nexport const CHANGE_FORM_VALUE = 'CHANGE_FORM_VALUE';\nexport const CHANGE_EDIT_VALUE = 'CHANGE_EDIT_VALUE';\nexport const TOGGLE_ROOM_CHECK = 'TOGGLE_ROOM_CHECK';\nexport const TOGGLE_EDIT_FORM = 'TOGGLE_EDIT_FORM';\nexport const TOGGLE_ROOM_CHECK_IN_EDITING = 'TOGGLE_ROOM_CHECK_IN_EDITING'\n\n\n// 通信\n\nexport const REQUEST_DELETE = 'SEND_DELETE';\nexport const SEND_PATCH = 'SEND_PATCH';\nexport const SEND_POST = 'SEND_POST';\nexport const FETCH_ALL_SCHEDULES = 'FETCH_ALL_SCHEDULES';\n\n// 一般\nexport const UPDATE_TIME = 'UPDATE_TIME';\nexport const SELECT_DATE = 'SELECT_DATE';\nexport const ADD_DATE = 'ADD_DATE';\nexport const TO_TODAY = 'TO_TODAY';\n\n\n\n\n\n","import {\n  TOGGLE_FORM_VISIBLE,\n  SELECT_BLANK,\n  SELECT_SCHEDULE,\n  CHANGE_FORM_VALUE,\n  CHANGE_EDIT_VALUE,\n  TOGGLE_ROOM_CHECK,\n  TOGGLE_ROOM_CHECK_IN_EDITING,\n  TOGGLE_EDIT_FORM\n} from \"../actions/types\";\nimport moment from \"moment\";\n\nexport const changeFormValue = (target, value) => dispatch => {\n  dispatch({\n    type: CHANGE_FORM_VALUE,\n    payload: { target: target, value, value }\n  });\n};\nexport const changeEditValue = (target, value) => dispatch => {\n  dispatch({\n    type: CHANGE_EDIT_VALUE,\n    payload: { target: target, value: value }\n  });\n};\nexport const selectBlank = (startTime, roomId) => dispatch => {\n  console.log(startTime);\n  dispatch({\n    type: SELECT_BLANK,\n    payload: {\n      startTime: moment(startTime).format(\"YYYY-MM-DD HH:mm:00\"),\n      endTime:moment(startTime).add(30,\"m\").format(\"YYYY-MM-DD HH:mm:00\"),\n      roomId: roomId\n    }\n  });\n};\nexport const toggleFormVisible = () => dispatch => {\n  dispatch({\n    type: TOGGLE_FORM_VISIBLE,\n    payload: {}\n  });\n};\n\nexport const toggleRoomCheck = roomId => dispatch => {\n  dispatch({\n    type: TOGGLE_ROOM_CHECK,\n    payload: Number(roomId)\n  });\n};\nexport const toggleRoomCheckInEditing = roomId => dispatch => {\n  dispatch({\n    type: TOGGLE_ROOM_CHECK_IN_EDITING,\n    payload: roomId\n  });\n};\n\nconst _constructRoomSelected = (roomIds) =>{\n  const roomSelected = {};\n  for(let i=1;i<=8;i++){\n    if(roomIds.indexOf(i)>=0){\n      roomSelected[i] = true;\n    }else{\n      roomSelected[i]=false;\n    }\n  }\n  return roomSelected;\n}\nexport const selectSchedule = uuid => dispatch => {\n  \n  fetch(\"http://35.211.249.14/\" + uuid, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(response => {\n      if (!response.ok) {\n        alert(\"失敗しました.すでに存在しない予定の可能性があります.\")\n        throw Error(response.statusText);\n      }\n      return response.json();\n    })\n    .then(responseData => {\n      const data = responseData[\"schedule\"];\n      const schedule = {\n        uuid: data.uuid,\n        startTime: moment(String(data.start_time)).format(\"YYYY-MM-DD HH:mm:ss\"),\n        endTime: moment(String(data.end_time)).format(\"YYYY-MM-DD HH:mm:ss\"),\n        userName: data.user_name,\n        content: data.content,\n        created: data.created,\n        edited: data.edited,\n        roomIds:data.room_ids,\n        \n      };\n      return schedule;\n    })\n    .then(schedule => {\n      dispatch({\n        type: SELECT_SCHEDULE,\n        payload: {\n          schedule:schedule,\n          roomSelected:_constructRoomSelected(schedule.roomIds)}\n      });\n    });\n};\n\nexport const toggleEditForm = () => dispatch => {\n  dispatch({\n    type: TOGGLE_EDIT_FORM,\n    payload: {}\n  });\n};\n","import React from \"react\";\n\n\n\nconst RoomChoice =(props)=>{\n    const roomChoiceArray = {\n        1:\"会議室1\",\n        2:\"会議室2\",\n        3:\"会議室3\",\n        4:\"会議室4\",\n        5:\"会議室5\",\n        6:\"会議室6\",\n        7:\"会議室7\",\n        8:\"会議室8\",\n\n}\nconst choiceElements = []\nfor(let i in roomChoiceArray){\n    if(props.roomIds.indexOf(Number(i))>=0){\n    choiceElements.push(\n        <React.Fragment>\n        <input type=\"checkbox\" className=\"select-input-01-checked\" name=\"room-choice\" id={`room-choice-${i}`} value={i} onClick={(e)=>{props.roomCheckAction(e.target.value)}} checked/>\n        <label for={`room-choice-${i}`} className=\"select-label-01-checked\">{roomChoiceArray[i]}</label>\n        </React.Fragment>\n    )\n    }else{\n        choiceElements.push(\n        <React.Fragment>\n        <input type=\"checkbox\" className=\"select-input-01\" name=\"room-choice\" id={`room-choice-${i}`} value={i} onClick={(e)=>{props.roomCheckAction(e.target.value)}}/>\n        <label for={`room-choice-${i}`}  className=\"select-label-01\">{roomChoiceArray[i]}</label>\n        </React.Fragment>)\n    }\n\n}\n    return(\n        <div>\n            {choiceElements.map((elem)=>{\n                return(elem);\n            })}\n        </div>\n    )\n}\n\nexport default RoomChoice;","import React from \"react\";\n\nconst TimeSelect = props => {\n  return (<select name={`time-select-${props.name}`}>\n  {props.timeList.map((time, index)=>{\n      if(props.initialValue==`${time}:00`){// satteに保管される値はHH:mm:ssなので付け足してチェック\n      return(<option value={time} selected>{time}</option>)}\n      else{\n        return(<option value={time}>{time}</option>)\n      }\n  })}</select>);\n};\n\nexport default TimeSelect;","import React, { Component } from \"react\";\nimport RoomChoice from \"../components/RoomChoice\";\nimport TimeSelect from \"../components/TimeSelect\";\nimport { connect } from \"react-redux\";\nimport { fetchAllSchedules, sendPost } from \"../actions/api_actions\";\nimport {\n  toggleFormVisible,\n  toggleRoomCheck,\n  changeFormValue\n} from \"../actions/form_actions\";\n\nclass PostForm extends Component {\n    backAction=(e)=>{\n      e.preventDefault(); \n        this.props.toggleFormVisible();\n        this.props.fetchAllSchedules(`${this.props.targetYear}-${this.props.targetMonth}-${\n            this.props.targetDate\n          }`);\n    }\n    registAction = (e) =>{\n      e.preventDefault(); \n      const promise = new Promise((resolve,reject)=>{\n        this.props.sendPost(this.props.insertSchedule);\n        resolve();\n      })\n      promise.then(()=>{\n        this.props.toggleFormVisible();\n      }).then(()=>{\n        this.props.fetchAllSchedules(`${this.props.targetYear}-${this.props.targetMonth}-${\n          this.props.targetDate\n        }`);\n      })\n    }\n    changeFormValueAction = (e) =>{\n        this.props.changeFormValue(e.target.name,e.target.value)\n    }\n    componentWillMount(){\n        this.changeFormValueAction = this.changeFormValueAction.bind(this);\n    }\n  render() {\n    const schedule=this.props.insertSchedule;\n    // formVisibleの値によって適用\n    const formStyle = { display: \"none\" };\n    if (this.props.formVisible) {\n      formStyle.display = \"flex\";\n    }\n    return (\n      <div className=\"box-postForm\" style={formStyle}>\n      <form  className=\"form-simple-01\">\n      <div class=\"flex-row-90\">\n        <TimeSelect name=\"startTime\" initialValue={schedule.startTime.split(' ')[1]} timeList={this.props.timeList} />\n        から\n        <TimeSelect name=\"endTime\" initialValue={schedule.endTime.split(' ')[1]} timeList={this.props.timeList}/>\n        まで\n        </div>\n        <div className=\"flex-row-90\">\n        <RoomChoice roomIds={schedule.roomIds} roomCheckAction={this.props.toggleRoomCheck}/>\n        </div>\n        <div className=\"flex-row-90\">\n        <input type=\"text\" className=\"input-text-01\" placeholder=\"名前を入力してください\" name=\"userName\" onChange={this.changeFormValueAction}/>\n        </div>\n        <div className=\"flex-row-90\">\n        <textarea placeholder=\"内容を入力してください\" className=\"input-text-02\" name=\"content\" onChange={this.changeFormValueAction}/>\n        </div>\n        <div className=\"flex-end-90\">\n        <button onClick={this.backAction} className=\"btn-simple-01\">戻る</button>\n        <button onClick={this.registAction} className=\"btn-simple-01\">登録</button>\n        </div>\n      </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  formVisible: state.form.formVisible,\n  insertSchedule: state.form.insertSchedule,\n  roomSelected: {\n    1: state.form.roomSelected[1],\n    2: state.form.roomSelected[2],\n    3: state.form.roomSelected[3],\n    4: state.form.roomSelected[4],\n    5: state.form.roomSelected[5],\n    6: state.form.roomSelected[6],\n    7: state.form.roomSelected[7],\n    8: state.form.roomSelected[8]\n  },\n  targetYear: state.general.targetYear,\n  targetMonth: state.general.targetMonth,\n  targetDate: state.general.targetDate\n});\nexport default connect(\n  mapStateToProps,\n  {\n    toggleFormVisible,\n    changeFormValue,\n    sendPost,\n    toggleRoomCheck,\n    fetchAllSchedules\n  })(\n  PostForm\n);\n","import React from \"react\";\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport { Button } from \"@material-ui/core\";\n\nconst ScheduleTimeRow = (props) =>{\n    return(\n        <ul class=\"box-scheduleTimeRow\">\n        \n        <li class=\"box-scheduleHeader\"></li>\n        {props.timeList.map((value,index)=>{\n            if(index%2==0){\n            return(<li class=\"item-scheduleTimeRow box-even\">{value}</li>)\n        }else{\n            return(<li class=\"item-scheduleTimeRow box-odd\">{value}</li>)\n        }\n        })}\n        </ul>\n    )\n}\nexport default ScheduleTimeRow;","import React, { Component } from \"react\";\nimport ScheduleRow from \"../components/ScheduleRow\";\nimport { connect } from \"react-redux\";\nimport { fetchAllSchedules } from \"../actions/api_actions\";\nimport { selectBlank, selectSchedule,toggleEditForm } from \"../actions/form_actions\";\nimport { updateTime, toToday } from \"../actions/general_action\";\nimport PostForm from \"./PostForm\";\nimport ScheduleTimeRow from \"../components/ScheduleTimeRow\";\n\n\nclass Schedules extends Component {\n  componentWillMount() {\n    setInterval(() => {\n    //   2分ごとに実行\n      this.props.fetchAllSchedules(\n        `${this.props.targetYear}-${this.props.targetMonth}-${\n          this.props.targetDate\n        }`\n      );\n      this.props.updateTime();\n    }, 120000);\n  }\n  componentDidMount(){\n    this.props.fetchAllSchedules(\n        `${this.props.targetYear}-${this.props.targetMonth}-${\n          this.props.targetDate\n        }`\n      );\n  }\n  render() {\n    const roomIdArray = [];\n    for (let i = 1; i <= 8; i++) {\n      roomIdArray.push(i);\n    }\n\n    return (\n      <div class=\"box-schedules\">\n      <ScheduleTimeRow timeList={this.props.timeList}/>\n        {roomIdArray.map(roomId => {\n          return (\n            <ScheduleRow\n            timeList={this.props.timeList}\n              key={roomId}\n              roomId={roomId}\n              scheduleList={this.props.schedules[roomId]}\n              targetDatetime = {`${this.props.targetYear}-${this.props.targetMonth}-${this.props.targetDate}`}\n              editEvent={(uuid)=>{\n                this.props.selectSchedule(uuid);\n                this.props.toggleEditForm();\n              }}\n              postEvent={this.props.selectBlank}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  schedules: state.api.schedules,\n  currentHour: state.general.currentHour,\n  currentMinute: state.general.currentMinute,\n  targetYear: state.general.targetYear,\n  targetMonth: state.general.targetMonth,\n  targetDate: state.general.targetDate\n});\n\nexport default connect(\n  mapStateToProps,\n  { fetchAllSchedules, selectBlank, selectSchedule, updateTime, toToday , toggleEditForm}\n)(Schedules);\n","import { UPDATE_TIME,SELECT_DATE,ADD_DATE,TO_TODAY } from \"./types\";\nimport moment from 'moment';\nexport const updateTime = () => dispatch => {\n  const datetime = moment();\n    dispatch({\n    type: UPDATE_TIME,\n    payload: {\n        isoWeekday:datetime.isoWeekday(),\n        year:datetime.format(\"YYYY\"),\n        month:datetime.format(\"MM\"),\n        date:datetime.format(\"DD\"),\n        hour:datetime.format(\"HH\"),\n        minute:datetime.format(\"mm\")\n    }\n  });\n};\n\nexport const selectDate = (targetDate) =>dispatch =>{\n    const targetDateMoment = moment(targetDate);\n    dispatch({\n        type:SELECT_DATE,\n        payload:{\n            year:targetDateMoment.format(\"YYYY\"),\n            month:targetDateMoment.format(\"MM\"),\n            date:targetDateMoment.format(\"DD\"),\n            isoWeekday:targetDateMoment.isoWeekday()\n        }\n    })\n}\n\nexport const addDate = (addNum,year,month,date) => dispatch =>{\n    const targetDatetime = moment().set({\n        year: year,\n        month: month - 1,\n        date: date\n      });\n      targetDatetime.add(addNum,\"day\")\n    dispatch({\n        type:ADD_DATE,\n        payload:{\n            year:targetDatetime.format(\"YYYY\"),\n            month:targetDatetime.format(\"MM\"),\n            date:targetDatetime.format(\"DD\"),\n            isoWeekday:targetDatetime.isoWeekday()\n        }\n\n    })\n}\nexport const toToday = ()=>dispatch =>{\n     const today = moment();\n     dispatch({\n         type:TO_TODAY,\n         payload:{\n             year:today.format(\"YYYY\"),\n             month:today.format(\"MM\"),\n             date:today.format(\"DD\"),\n             isoWeekday:today.isoWeekday()\n         },\n     }) \n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport RoomChoice from \"../components/RoomChoice\";\nimport TimeSelect from \"../components/TimeSelect\";\nimport { fetchAllSchedules, sendPatch } from \"../actions/api_actions\";\nimport {\n  toggleFormVisible,\n  toggleRoomCheckInEditing,\n  changeEditValue\n} from \"../actions/form_actions\";\n\nclass EditForm extends Component {\n  render() {\n    return (\n      <div>\n        <form />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  schedule: {\n    uuid: state.form.scheduleTouched.uuid,\n    edited: state.form.scheduleTouched.edited,\n    created: state.form.scheduleTouched.created,\n    content: state.form.scheduleTouched.content,\n    userName: state.form.scheduleTouched.userName,\n    roomIds: state.form.scheduleTouched.roomIds,\n    startTime: state.form.scheduleTouched.startTime,\n    endTime: state.form.scheduleTouched.endTime\n  },\n  editing: state.form.editing,\n  roomSelected: {\n    1: state.form.roomSelected[1],\n    2: state.form.roomSelected[2],\n    3: state.form.roomSelected[3],\n    4: state.form.roomSelected[4],\n    5: state.form.roomSelected[5],\n    6: state.form.roomSelected[6],\n    7: state.form.roomSelected[7],\n    8: state.form.roomSelected[8]\n  },\n  targetYear: state.general.targetYear,\n  targetMonth: state.general.targetMonth,\n  targetDate: state.general.targetDate\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    fetchAllSchedules,\n    sendPatch,\n    toggleFormVisible,\n    toggleRoomCheckInEditing,\n    changeEditValue\n  }\n)(EditForm);\n","import React, { Component } from \"react\";\nimport \"App.css\";\nimport \"./stylesheets/cell.css\";\nimport Schedules from \"containers/Schedules\";\nimport PostForm from \"containers/PostForm\";\nimport EditForm from \"containers/Editform\";\n\nconst timeList = [\n  \"00:00\",\n  \"00:30\",\n  \"01:00\",\n  \"01:30\",\n  \"02:00\",\n  \"02:30\",\n  \"03:00\",\n  \"03:30\",\n  \"04:00\",\n  \"04:30\",\n  \"05:00\",\n  \"05:30\",\n  \"06:00\",\n  \"06:30\",\n  \"07:00\",\n  \"07:30\",\n  \"08:00\",\n  \"08:30\",\n  \"09:00\",\n  \"09:30\",\n  \"10:00\",\n  \"10:30\",\n  \"11:00\",\n  \"11:30\",\n  \"12:00\",\n  \"12:30\",\n  \"13:00\",\n  \"13:30\",\n  \"14:00\",\n  \"14:30\",\n  \"15:00\",\n  \"15:30\",\n  \"16:00\",\n  \"16:30\",\n  \"17:00\",\n  \"17:30\",\n  \"18:00\",\n  \"18:30\",\n  \"19:00\",\n  \"19:30\",\n  \"20:00\",\n  \"20:30\",\n  \"21:00\",\n  \"21:30\",\n  \"22:00\",\n  \"22:30\",\n  \"23:00\",\n  \"23:30\",\n  \"00:00\",\n];\n\nclass App extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <Schedules timeList={timeList}/>\n        <PostForm timeList={timeList}/>\n        <EditForm timeList={timeList}/>\n        </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n    SELECT_DATE,\n    REQUEST_DELETE,\n    SEND_PATCH,\n    SEND_POST,\n    FETCH_ALL_SCHEDULES\n  } from \"../actions/types\";\n\n\nconst initialState = {\n    schedules :{\n        1:{},\n        2:{},\n        3:{},\n        4:{},\n        5:{},\n        6:{},\n        7:{},\n        8:{},\n \n    },\n}\n\nexport default function(state=initialState,action){\n    switch(action.type){\n        case FETCH_ALL_SCHEDULES:\n        return {schedules:action.payload}\n        case REQUEST_DELETE,SEND_PATCH,SEND_POST:\n        return state\n        default:\n        return state\n}\n}","import {\n  TOGGLE_FORM_VISIBLE,\n  SELECT_BLANK,\n  SELECT_SCHEDULE,\n  CHANGE_FORM_VALUE,\n  CHANGE_EDIT_VALUE,\n  TOGGLE_ROOM_CHECK,\n  TOGGLE_EDIT_FORM,\n  TOGGLE_ROOM_CHECK_IN_EDITING\n} from \"../actions/types\";\n\nconst initialState = {\n  roomTouched: 0,\n  scheduleTouched: {\n    uuid: \"\",\n    roomIds: [],\n    startTime: \"\",\n    endTime: \"\",\n    userName: \"\",\n    content: \"\",\n    edited: \"\",\n    created: \"\"\n  },\n  formVisible: false,\n  editing: false,\n  insertSchedule: {\n    roomIds: [],\n    startTime: \"\",\n    endTime: \"\",\n    userName: \"\",\n    content: \"\"\n  },\n  roomSelected: {\n    1: false,\n    2: false,\n    3: false,\n    4: false,\n    5: false,\n    6: false,\n    7: false,\n    8: false\n  }\n};\n\nexport default function(state = initialState, action) {\n  const stateNext = Object.assign({}, state);\n  switch (action.type) {\n    case TOGGLE_EDIT_FORM:\n      stateNext.editing = !stateNext.editing;\n      stateNext.roomSelected = {\n        1: false,\n        2: false,\n        3: false,\n        4: false,\n        5: false,\n        6: false,\n        7: false,\n        8: false\n      };\n      return stateNext;\n    case SELECT_SCHEDULE:\n      stateNext.editing = true;\n      const scheduleTouched = action.payload[\"schedule\"];\n      stateNext.scheduleTouched = scheduleTouched;\n      stateNext.roomSelected = action.payload[\"roomSelected\"];\n      return stateNext;\n    case CHANGE_FORM_VALUE:\n      const target = action.payload.target;\n      const value = action.payload.value;\n      stateNext.insertSchedule[target] = value;\n      return stateNext;\n    case CHANGE_EDIT_VALUE:\n      const k = action.payload.target;\n      const v = action.payload.value;\n      stateNext.scheduleTouched[k] = v;\n\n      return stateNext;\n    case SELECT_BLANK:\n      stateNext.insertSchedule.roomIds = [action.payload.roomId];\n      stateNext.roomSelected[action.payload.roomId] = true;\n      stateNext.insertSchedule.startTime = action.payload.startTime;\n      stateNext.insertSchedule.endTime = action.payload.endTime;\n      stateNext.formVisible = true;\n      return stateNext;\n    case TOGGLE_FORM_VISIBLE:\n      return {\n        roomTouched: 0,\n        scheduleTouched: \"\",\n        formVisible: false,\n        editing: false,\n        insertSchedule: {\n          roomIds: [],\n          startTime: \"\",\n          endTime: \"\",\n          userName: \"\",\n          content: \"\"\n        },\n        roomSelected: {\n          1: false,\n          2: false,\n          3: false,\n          4: false,\n          5: false,\n          6: false,\n          7: false,\n          8: false\n        }\n      };\n    case TOGGLE_ROOM_CHECK:\n      const roomIds = action.payload;\n      stateNext.roomSelected[roomIds] = !stateNext.roomSelected[roomIds];\n      const index = stateNext.insertSchedule.roomIds.indexOf(roomIds);\n      if (index >= 0) {\n        // すでに存在する場合削除\n        stateNext.insertSchedule.roomIds.splice(index, 1);\n      } else {\n        //まだない場合追加\n        stateNext.insertSchedule.roomIds.push(action.payload);\n      }\n      return stateNext;\n    case TOGGLE_ROOM_CHECK_IN_EDITING:\n    //タッチされたidを受け取る\n    const roomIdsEditing = action.payload;\n    // 値をトグル\n    stateNext.roomSelected[roomIdsEditing] = !stateNext.roomSelected[roomIdsEditing];\n\n    const indexEditing = stateNext.scheduleTouched.roomIds.indexOf(roomIdsEditing);\n    if (indexEditing >= 0) {\n      // すでに存在する場合削除\n      stateNext.scheduleTouched.roomIds.splice(indexEditing, 1);\n    } else {\n      //まだない場合追加\n      stateNext.scheduleTouched.roomIds.push(roomIdsEditing);\n    }\n    \n    return stateNext;\n    default:\n      return Object.assign({}, state);\n  }\n}\n","import { UPDATE_TIME, SELECT_DATE, ADD_DATE, TO_TODAY } from \"../actions/types\";\nimport moment from 'moment';\nconst initialState = {\n  currentYear: moment().format(\"YYYY\"),\n  currentMonth: moment().format(\"MM\"),\n  currentDate: moment().format(\"DD\"),\n  currentDay: moment().isoWeekday(),\n  currentHour: moment().format(\"HH\"),\n  currentMinute: moment().format(\"mm\"),\n  targetYear: moment().format(\"YYYY\"),\n  targetMonth: moment().format(\"MM\"),\n  targetDay: parseDayToJa(moment().isoWeekday()),\n  targetDate: moment().format(\"DD\")\n};\n\nfunction parseDayToJa(Day) {\n  switch (Day) {\n    case 1:\n      return \"月\";\n    case 2:\n      return \"火\";\n    case 3:\n      return \"水\";\n    case 4:\n      return \"木\";\n    case 5:\n      return \"金\";\n    case 6:\n      return \"土\";\n    case 7:\n      return \"日\";\n  }\n}\n\nexport default function(state = initialState, action) {\n  const nextState = Object.assign({}, state);\n  switch (action.type) {\n    case UPDATE_TIME:\n      nextState.currentDay = parseDayToJa(action.payload.isoWeekday);\n      nextState.currentYear = action.payload.year;\n      nextState.currentMonth = action.payload.month;\n      nextState.currentDate = action.payload.date;\n      nextState.currentHour = action.payload.hour;\n      nextState.currentMinute = action.payload.minute;\n      return nextState;\n    case SELECT_DATE:\n      nextState.targetYear = action.payload.year;\n      nextState.targetMonth = action.payload.month;\n      nextState.targetDate = action.payload.date;\n      nextState.targetDay = parseDayToJa(action.payload.isoWeekday);\n      return nextState;\n    case ADD_DATE:\n      \n      nextState.targetYear = action.payload.year\n      nextState.targetMonth = action.payload.month;\n      nextState.targetDate = action.payload.date;\n      nextState.targetDay = parseDayToJa(action.payload.isoWeekday);\n      return nextState;\n    case TO_TODAY:\n      nextState.targetYear = action.payload.year;\n      nextState.targetMonth = action.payload.month;\n      nextState.targetDate = action.payload.date;\n      nextState.targetDay = parseDayToJa(action.payload.isoWeekday);\n      return nextState;\n    default:\n      return nextState;\n  }\n}\n","import {combineReducers} from 'redux';\nimport apiReducers from './apiReducers';\nimport formReducers from './formReducers';\nimport generalReducers from './generalReducers';\nimport { createGenerateClassName } from '@material-ui/core';\n\nexport default combineReducers({\n    api:apiReducers,\n    form:formReducers,\n    general:generalReducers,\n})","import {createStore,applyMiddleware,compose} from 'redux';\nimport rootReducer from \"./reducers\";\nimport thunk from \"redux-thunk\";\n\n\nconst initialState = {};\nconst middleware = [thunk];\n\n\nconst store = createStore(\n    rootReducer,\n    initialState,\n    compose(\n        applyMiddleware(...middleware)\n       //,window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__() // Redux Dev Tool使用のための設定\n    )\n)\n\nexport default store;","import React from \"react\";\nimport store from \"./store\";\nimport { Provider } from \"react-redux\";\n\n\nconst Root = (props)=>{\n    return(\n        <Provider store={store}>\n        {props.children}\n        </Provider>\n    )\n}\nexport default Root;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Root from \"./Root\";\n\nReactDOM.render(<Root><App /></Root>, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}