{"version":3,"sources":["reducers/apiReducers.js","reducers/formReducers.js","reducers/generalReducers.js","reducers/index.js","actions/types.js","store.js","components/BlankCell.js","containers/Schedules.js","App.js","serviceWorker.js","index.js"],"names":["initialState","schedules","roomTouched","scheduleTouched","uuid","roomIds","startTime","endTime","userName","content","edited","created","formVisible","editing","insertSchedule","roomSelected","1","2","3","4","5","6","7","8","combineReducers","api","state","arguments","length","undefined","action","type","payload","form","stateNext","Object","assign","target","value","k","v","roomId","index","indexOf","splice","push","roomIdsEditing","indexEditing","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","BlankCell","props","react_default","a","createElement","ListItem_default","button","key","order","class","Schedules","row","i","map","components_BlankCell","insertAction","console","log","Component","App","react_redux_es","containers_Schedules","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6d6574ce.chunk.js","sourcesContent":["import {\n    SELECT_DATE,\n    REQUEST_DELETE,\n    SEND_PATCH,\n    SEND_POST,\n    FETCH_ALL_SCHEDULES\n  } from \"../actions/types\";\n\n\nconst initialState = {\n    schedules :[],\n}\n\nexport default function(state=initialState,action){\n    switch(action.type){\n        case FETCH_ALL_SCHEDULES:\n        return {schedules:action.payload}\n        case REQUEST_DELETE,SEND_PATCH,SEND_POST:\n        return state\n        default:\n        return state\n}\n}","import {\n  TOGGLE_FORM_VISIBLE,\n  SELECT_BLANK,\n  SELECT_SCHEDULE,\n  CHANGE_FORM_VALUE,\n  CHANGE_EDIT_VALUE,\n  TOGGLE_ROOM_CHECK,\n  TOGGLE_EDIT_FORM,\n  TOGGLE_ROOM_CHECK_IN_EDITING\n} from \"../actions/types\";\n\nconst initialState = {\n  roomTouched: 0,\n  scheduleTouched: {\n    uuid: \"\",\n    roomIds: [],\n    startTime: \"\",\n    endTime: \"\",\n    userName: \"\",\n    content: \"\",\n    edited: \"\",\n    created: \"\"\n  },\n  formVisible: false,\n  editing: false,\n  insertSchedule: {\n    roomIds: [],\n    startTime: \"\",\n    endTime: \"\",\n    userName: \"\",\n    content: \"\"\n  },\n  roomSelected: {\n    1: false,\n    2: false,\n    3: false,\n    4: false,\n    5: false,\n    6: false,\n    7: false,\n    8: false\n  }\n};\n\nexport default function(state = initialState, action) {\n  const stateNext = Object.assign({}, state);\n  switch (action.type) {\n    case TOGGLE_EDIT_FORM:\n      stateNext.editing = !stateNext.editing;\n      stateNext.roomSelected = {\n        1: false,\n        2: false,\n        3: false,\n        4: false,\n        5: false,\n        6: false,\n        7: false,\n        8: false\n      };\n      return stateNext;\n    case SELECT_SCHEDULE:\n      stateNext.editing = true;\n      const scheduleTouched = action.payload[\"schedule\"];\n      stateNext.scheduleTouched = scheduleTouched;\n      stateNext.roomSelected = action.payload[\"roomSelected\"];\n      return stateNext;\n    case CHANGE_FORM_VALUE:\n      const target = action.payload.target;\n      const value = action.payload.value;\n      stateNext.insertSchedule[target] = value;\n      return stateNext;\n    case CHANGE_EDIT_VALUE:\n      const k = action.payload.target;\n      const v = action.payload.value;\n      stateNext.scheduleTouched[k] = v;\n\n      return stateNext;\n    case SELECT_BLANK:\n      stateNext.insertSchedule.roomIds = [action.payload.roomId];\n      stateNext.roomSelected[action.payload.roomId] = true;\n      stateNext.insertSchedule.startTime = action.payload.startTime;\n      stateNext.formVisible = true;\n      return stateNext;\n    case TOGGLE_FORM_VISIBLE:\n      return {\n        roomTouched: 0,\n        scheduleTouched: \"\",\n        formVisible: false,\n        editing: false,\n        insertSchedule: {\n          roomIds: [],\n          startTime: \"\",\n          endTime: \"\",\n          userName: \"\",\n          content: \"\"\n        },\n        roomSelected: {\n          1: false,\n          2: false,\n          3: false,\n          4: false,\n          5: false,\n          6: false,\n          7: false,\n          8: false\n        }\n      };\n    case TOGGLE_ROOM_CHECK:\n      const roomIds = action.payload;\n      stateNext.roomSelected[roomIds] = !stateNext.roomSelected[roomIds];\n      const index = stateNext.insertSchedule.roomIds.indexOf(roomIds);\n      if (index >= 0) {\n        // すでに存在する場合削除\n        stateNext.insertSchedule.roomIds.splice(index, 1);\n      } else {\n        //まだない場合追加\n        stateNext.insertSchedule.roomIds.push(action.payload);\n      }\n      return stateNext;\n    case TOGGLE_ROOM_CHECK_IN_EDITING:\n    //タッチされたidを受け取る\n    const roomIdsEditing = action.payload;\n    // 値をトグル\n    stateNext.roomSelected[roomIdsEditing] = !stateNext.roomSelected[roomIdsEditing];\n\n    const indexEditing = stateNext.scheduleTouched.roomIds.indexOf(roomIdsEditing);\n    if (indexEditing >= 0) {\n      // すでに存在する場合削除\n      stateNext.scheduleTouched.roomIds.splice(indexEditing, 1);\n    } else {\n      //まだない場合追加\n      stateNext.scheduleTouched.roomIds.push(roomIdsEditing);\n    }\n    \n    return stateNext;\n    default:\n      return Object.assign({}, state);\n  }\n}\n","import { UPDATE_TIME, SELECT_DATE, ADD_DATE, TO_TODAY } from \"../actions/types\";\nconst initialState = {\n  currentYear: \"\",\n  currentMonth: \"\",\n  currentDate: \"\",\n  currentDay: \"\",\n  currentHour: \"\",\n  currentMinute: \"\",\n  targetYear: \"\",\n  targetMonth: \"\",\n  targetDay: \"\",\n  targetDate: \"\"\n};\n\nfunction parseDayToJa(Day) {\n  switch (Day) {\n    case 1:\n      return \"月\";\n    case 2:\n      return \"火\";\n    case 3:\n      return \"水\";\n    case 4:\n      return \"木\";\n    case 5:\n      return \"金\";\n    case 6:\n      return \"土\";\n    case 7:\n      return \"日\";\n  }\n}\n\nexport default function(state = initialState, action) {\n  const nextState = Object.assign({}, state);\n  switch (action.type) {\n    case UPDATE_TIME:\n      nextState.currentDay = parseDayToJa(action.payload.isoWeekday);\n      nextState.currentYear = action.payload.year;\n      nextState.currentMonth = action.payload.month;\n      nextState.currentDate = action.payload.date;\n      nextState.currentHour = action.payload.hour;\n      nextState.currentMinute = action.payload.minute;\n      return nextState;\n    case SELECT_DATE:\n      nextState.targetYear = action.payload.year;\n      nextState.targetMonth = action.payload.month;\n      nextState.targetDate = action.payload.date;\n      nextState.targetDay = parseDayToJa(action.payload.isoWeekday);\n      return nextState;\n    case ADD_DATE:\n      \n      nextState.targetYear = action.payload.year\n      nextState.targetMonth = action.payload.month;\n      nextState.targetDate = action.payload.date;\n      nextState.targetDay = parseDayToJa(action.payload.isoWeekday);\n      return nextState;\n    case TO_TODAY:\n      nextState.targetYear = action.payload.year;\n      nextState.targetMonth = action.payload.month;\n      nextState.targetDate = action.payload.date;\n      nextState.targetDay = parseDayToJa(action.payload.isoWeekday);\n      return nextState;\n    default:\n      return nextState;\n  }\n}\n","import {combineReducers} from 'redux';\nimport apiReducers from './apiReducers';\nimport formReducers from './formReducers';\nimport generalReducers from './generalReducers';\nimport { createGenerateClassName } from '@material-ui/core';\n\nexport default combineReducers({\n    api:apiReducers,\n    form:formReducers,\n    //general:generalReducers,\n})","\n\n// Formが変化する\nexport const TOGGLE_FORM_VISIBLE = 'TOGGLE_FORM_VISIBLE';\nexport const SELECT_BLANK = 'SELECT_BLANK';\nexport const SELECT_SCHEDULE = 'SELECT_SCHEDULE';\nexport const CHANGE_FORM_VALUE = 'CHANGE_FORM_VALUE';\nexport const CHANGE_EDIT_VALUE = 'CHANGE_EDIT_VALUE';\nexport const TOGGLE_ROOM_CHECK = 'TOGGLE_ROOM_CHECK';\nexport const TOGGLE_EDIT_FORM = 'TOGGLE_EDIT_FORM';\nexport const TOGGLE_ROOM_CHECK_IN_EDITING = 'TOGGLE_ROOM_CHECK_IN_EDITING'\n\n\n// 通信\n\nexport const REQUEST_DELETE = 'SEND_DELETE';\nexport const SEND_PATCH = 'SEND_PATCH';\nexport const SEND_POST = 'SEND_POST';\nexport const FETCH_ALL_SCHEDULES = 'FETCH_ALL_SCHEDULES';\n\n// 一般\nexport const UPDATE_TIME = 'UPDATE_TIME';\nexport const SELECT_DATE = 'SELECT_DATE';\nexport const ADD_DATE = 'ADD_DATE';\nexport const TO_TODAY = 'TO_TODAY';\n\n\n\n\n\n","import {createStore,applyMiddleware,compose} from 'redux';\nimport rootReducer from \"./reducers\";\nimport thunk from \"redux-thunk\";\n\n\nconst initialState = {};\nconst middleware = [thunk];\n\n\nconst store = createStore(\n    rootReducer,\n    initialState,\n    compose(\n        applyMiddleware(...middleware)\n       //,window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__() // Redux Dev Tool使用のための設定\n    )\n)\n\nexport default store;","import React, { Component } from \"react\";\nimport ListItem from \"@material-ui/core/ListItem\";\n\n\n\nconst BlankCell=(props)=>{\n        return (\n            <ListItem\n          button\n          key={this.props.order}\n          class=\"list-item-blankCell\"\n        >\n        </ListItem>\n        )\n    \n}\nexport default BlankCell;","import React, { Component } from \"react\";\nimport BlankCell from \"../components/BlankCell\";\n\nclass Schedules extends Component {\n  render() {\n    const row = [];\n    for (let i = 0; i < 600; i++) {\n      row.push(0);\n    }\n\n    return (\n      <div>\n        {row.map(i => {\n          return (\n            <BlankCell\n              order={i}\n              insertAction={() => {\n                console.log(\"insert\");\n              }}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n}\nexport default Schedules;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport \"./stylesheets/cell.css\";\nimport store from \"./store\";\nimport { Provider } from \"react-redux\";\nimport Schedules from \"./containers/Schedules\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Schedules/>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}