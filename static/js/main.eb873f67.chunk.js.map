{"version":3,"sources":["components/FillingCell.js","components/BlankCell.js","components/ScheduleCell.js","components/ScheduleHeader.js","components/ClockLine.js","components/ScheduleRow.js","actions/api_actions.js","actions/types.js","actions/form_actions.js","actions/general_action.js","components/RoomChoice.js","components/TimeSelect.js","containers/PostForm.js","components/ScheduleTimeRow.js","containers/Schedules.js","containers/Editform.js","containers/DatePicker.js","App.js","serviceWorker.js","reducers/apiReducers.js","reducers/formReducers.js","reducers/generalReducers.js","reducers/index.js","store.js","Root.js","index.js"],"names":["FillingCell","props","schedule","cellWidth","react_default","a","createElement","class","key","style","height","concat","cellHeight","ListItem_default","button","width","margin","padding","backgroundColor","borderRadius","boxSizing","zIndex","onClick","clickAction","uuid","userName","content","BlankCell","index","targetDatetime","time","roomId","className","ScheduleCell","components_BlankCell","postEvent","components_FillingCell","editEvent","ScheduleHeader","ClockLine","top","ScheduleRow","fillingList","i","push","scheduleList","Number","components_ScheduleHeader","components_ClockLine","map","components_ScheduleCell","timeList","urlBase","headers","Content-Type","fetchAllSchedules","datetime","dispatch","_getFromDate","then","responseData","schedulesLocal","_parseSchedules","type","payload","targetDate","moment","url","format","console","log","fetch","method","response","ok","Error","statusText","json","schedulesArray","1","2","3","4","5","6","7","8","data","startTime","endTime","roomIds","sort","verticalStart","Math","floor","toggleEditForm","toToday","today","year","month","date","isoWeekday","RoomChoice","roomChoiceArray","choiceElements","indexOf","name","id","value","e","roomCheckAction","target","checked","for","elem","TimeSelect","initialValue","selected","PostForm","backAction","preventDefault","_this","toggleFormVisible","targetYear","targetMonth","registAction","Promise","resolve","reject","sendPost","insertSchedule","changeFormValueAction","changeFormValue","this","bind","formStyle","display","formVisible","components_TimeSelect","split","components_RoomChoice","toggleRoomCheck","placeholder","onChange","Component","connect","state","form","roomSelected","general","Object","defineProperty","postData","insertSchedules","user_name","start_time","end_time","room_ids","assign","_constructInsertSchedules","body","JSON","stringify","insert_schedules","catch","error","alert","ScheduleTimeRow","Schedules","setInterval","updateTime","_this2","roomIdArray","components_ScheduleTimeRow","components_ScheduleRow","schedules","selectSchedule","selectBlank","api","currentHour","currentMinute","add","String","created","edited","_constructRoomSelected","hour","minute","EditForm","patchAction","sendPatch","editing","toggleRoomCheckInEditing","changeEditValue","scheduleTouched","patchData","DatePickerFrame","onClickDatePicker","selectDate","targetDateTime","react_datepicker_es","targetDay","targetDateMoment","addDate","addNum","set","App","Fragment","DatePicker","containers_Schedules","containers_PostForm","Editform","Boolean","window","location","hostname","match","initialState","roomTouched","currentYear","currentMonth","currentDate","currentDay","parseDayToJa","Day","combineReducers","arguments","length","undefined","action","stateNext","k","v","splice","roomIdsEditing","indexEditing","nextState","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","Root","es","children","ReactDOM","render","src_Root","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.eb873f67.chunk.js","sourcesContent":["import React from \"react\";\nimport ListItem from \"@material-ui/core/ListItem\";\n\nconst FillingCell = props => {\n  if (props.schedule.cellWidth == 0) {\n    // 表示されない幅0のセル\n    return (\n      <div\n        class=\"cell-under\"\n        key={props.key}\n        style={{\n          height: `${props.schedule.cellHeight * 5 +\n            props.schedule.cellHeight * 0.1}rem`\n        }}\n      />\n    );\n  } else if (props.schedule.cellHeight == 0) {\n    // 表示されない高さ0のセル\n    return <div />;\n  } else {\n    return (\n      <ListItem\n        button\n        key={props.key}\n        style={{\n          width: `${props.schedule.cellWidth * 100}%`,\n          margin: 0,\n          padding: 0,\n          backgroundColor: \"#00b8d4\",\n          borderRadius: \"0.4rem\",\n          boxSizing:\"border-box\",\n          \n        }}\n      >\n        <div\n          class=\"li-fillingCell\"\n          style={{\n            height: `${props.schedule.cellHeight * 5}rem`,\n            zIndex: 1\n          }}\n          onClick={() => {\n            \n            props.clickAction(props.schedule.uuid);\n          }}\n        >\n          {props.schedule.userName}\n          <br />「{props.schedule.content}」\n        </div>\n      </ListItem>\n    );\n  }\n};\n\nexport default FillingCell;\n","import React from \"react\";\nimport ListItem from \"@material-ui/core/ListItem\";\nconst BlankCell = props => {\n  if (props.index % 2 == 0) {\n    return (\n      <ListItem\n        style={{ width: \"100%\", margin: 0, padding: 0 }}\n        button\n        onClick={() =>\n          props.clickAction(\n            `${props.targetDatetime} ${props.time}`,\n            props.roomId\n          )\n        }\n        key={props.index}\n      >\n        <div className=\"li-blankCell box-even-black\" />\n      </ListItem>\n    );\n  } else {\n    return (\n      <ListItem\n        style={{ width: \"100%\", margin: 0, padding: 0 }}\n        button\n        onClick={() =>\n          props.clickAction(\n            `${props.targetDatetime} ${props.time}`,\n            props.roomId\n          )\n        }\n        key={props.index}\n      >\n        <div className=\"li-blankCell box-odd-black\" />\n      </ListItem>\n    );\n  }\n};\nexport default BlankCell;\n","import React from 'react';\nimport FillingCell from './FillingCell';\nimport BlankCell from './BlankCell';\n\n\nconst ScheduleCell =(props)=>{\n    if(props.schedule==false){\n        return(<BlankCell key={props.index} index={props.index} clickAction={props.postEvent} time={props.time} targetDatetime={props.targetDatetime} roomId={props.roomId}/>)\n    }else{\n        return(<FillingCell key={props.index} schedule={props.schedule} index={props.index} clickAction={props.editEvent}/>)\n    }\n}\n\nexport default ScheduleCell;","import React from \"react\";\n\nconst ScheduleHeader =(props) =>{\n    return (\n        <div class=\"box-scheduleHeader\">\n        <div class=\"item-scheduleHeader\">会議室{props.roomId}</div>\n        </div>\n    )\n}\nexport default ScheduleHeader;","import React from \"react\";\n\nconst ClockLine = (props)=>{\n    return(\n        <div class=\"box-clockLine\" style={{top:`${props.top}rem`}}></div>\n    )\n}\nexport default ClockLine;","import React from \"react\";\nimport ScheduleCell from \"components/ScheduleCell\";\nimport ScheduleHeader from \"components/ScheduleHeader\";\nimport ClockLine from \"components/ClockLine\";\n\nconst ScheduleRow = props => {\n  const fillingList = [];\n  for (let i = 1; i <= 49; i++) {\n    fillingList.push(false);\n  }\n  const scheduleList = props.scheduleList;\n  for (let key in scheduleList) {\n    fillingList[key] = scheduleList[key];\n    if (scheduleList[key].cellHeight > 1) {\n      for (let i = 1; i < scheduleList[key].cellHeight; i++) {\n        fillingList[Number(key) + i] = {\n          cellHeight: 0\n        };\n      }\n    }\n  }\n  return (\n    <ul class=\"box-scheduleRow\">\n      <ScheduleHeader roomId={props.roomId} />\n      <ClockLine top={20} />\n      {fillingList.map((schedule, index) => {\n        return (\n          <ScheduleCell\n          roomId={props.roomId}\n            schedule={schedule}\n            key={index}\n            index={index}\n            editEvent={props.editEvent}\n            postEvent={props.postEvent}\n            time={props.timeList[index]}\n            targetDatetime={props.targetDatetime}\n          />\n        );\n      })}\n    </ul>\n  );\n};\nexport default ScheduleRow;\n","import {\n  SELECT_DATE,\n  REQUEST_DELETE,\n  SEND_PATCH,\n  SEND_POST,\n  FETCH_ALL_SCHEDULES\n} from \"./types\";\nimport moment from 'moment';\n\n//import moment from \"moment\";\n\nconst urlBase = \"http://35.211.249.14/\";\nconst headers = {\n  \"Content-Type\": \"application/json\"\n};\n\nexport const fetchAllSchedules = datetime => dispatch => {\n  // データ取得\n  _getFromDate(datetime).then(responseData => {\n    const schedulesLocal = _parseSchedules(responseData[\"schedules\"]);\n    \n    dispatch({\n      type: FETCH_ALL_SCHEDULES,\n      payload: schedulesLocal\n    });\n  });\n};\nexport const sendPatch = patchData => dispatch => {\n  const body = JSON.stringify({\n    schedules: {\n      uuid: patchData.uuid,\n      content: patchData.content,\n      user_name: patchData.userName,\n      room_ids: patchData.roomIds,\n      start_time: patchData.startTime,\n      end_time: patchData.endTime\n    }\n  });\n  const url = urlBase + \"reserves\";\n\n  fetch(url, { method: \"PUT\", headers: headers, body: body })\n    .then(response => {\n      if (!response.ok) {\n        throw Error(response.statusText);\n      }\n      return response;\n    })\n    .then(\n      dispatch({\n        type: SEND_PATCH,\n        payload: {}\n      })\n    );\n};\nexport const requestDelete = uuid => dispatch => {\n  const url = urlBase + \"reserves\";\n  const body = JSON.stringify({ uuid: uuid });\n  fetch(url, { method: \"DELETE\", headers: headers, body: body })\n    .then(response => {\n      if (!response.ok) {\n        throw Error(response.statusText);\n      }\n      return response;\n    })\n    .then(\n      dispatch({\n        type: REQUEST_DELETE,\n        payload: {}\n      })\n    );\n  return;\n};\nconst _constructInsertSchedules = postData => {\n  const roomIds = postData.roomIds;\n  console.log(roomIds);\n  let insertSchedules = [];\n  let insertSchedule;\n  const schedule = {\n    user_name: postData.userName,\n    content: postData.content,\n    start_time: postData.startTime,\n    end_time: postData.endTime,\n    room_ids: []\n  };\n  for (let index in roomIds) {\n    if (index == 0) {\n      // 一番目は比べようがないのでそのまま追加\n      schedule.room_ids.push(roomIds[index]);\n    } else {\n      // 連続値ならそのまま追加\n      if (roomIds[index - 1] + 1 == roomIds[index]) {\n        schedule.room_ids.push(roomIds[index]);\n      } else {\n        // そうでない場合これまでの予定を配列に格納し\n        // room_idsキーの値を初期化java\n        insertSchedule = Object.assign({}, schedule)\n        insertSchedules.push(insertSchedule);\n        schedule.room_ids = [roomIds[index]];\n      }\n    }\n  }\n  // 最後のscheduleオブジェクトはループの追加から外れているので追加\n  insertSchedules.push(schedule);\n  return insertSchedules;\n};\nexport const sendPost = postData => dispatch => {\n  const insertSchedules = _constructInsertSchedules(postData);\n\n  const body = JSON.stringify({ insert_schedules: insertSchedules });\n  const url = urlBase + \"reserves\";\n  \n  fetch(url, { method: \"POST\", headers: headers, body: body })\n    .then(response => {\n      if (!response.ok) {\n        throw Error(response.statusText);\n      }\n      return response;\n    })\n    .then(response => {\n      // うまくPOSTできたらもう一度読み込みを行う\n      _getFromDate(postData.startTime).then(responseData => {\n        const schedulesLocal = _parseSchedules(responseData[\"schedules\"]);\n        dispatch({\n          type: SEND_POST,\n          payload: schedulesLocal\n        });\n      });\n    })\n    .catch(error => {\n      alert(error);\n    });\n};\n\nconst _getFromDate = datetime => {\n  // APIにアクセスして特定の日時のデータを取得\n  const targetDate = moment(datetime);\n  const url =\n    urlBase +\n    `reserves/${targetDate.format(\"YYYY\")}/${targetDate.format(\n      \"MM\"\n    )}/${targetDate.format(\"DD\")}`;\n    console.log(url);\n  return fetch(url, { method: \"GET\" })\n    .then(response => {\n      if (!response.ok) {\n        throw Error(response.statusText);\n      }\n      return response;\n    })\n    .then(responseData => {\n      return responseData.json();\n    });\n};\n\nconst _parseSchedules = schedulesArray => {\n  const schedulesLocal = {\n    1: {},\n    2: {},\n    3: {},\n    4: {},\n    5: {},\n    6: {},\n    7: {},\n    8: {}\n  };\n  for (let index in schedulesArray) {\n    // 開始時間と終了時間からセルのサイズを算出する\n    let data = schedulesArray[index];\n    let uuid = data[\"uuid\"];\n    let userName = data[\"user_name\"];\n    let content = data[\"content\"];\n    let startTime = moment(data[\"start_time\"]);\n    let endTime = moment(data[\"end_time\"]);\n    let roomIds = data[\"room_ids\"].sort();\n    let cellWidth = data[\"cell_width\"];\n    let cellHeight = data[\"cell_height\"];\n\n    let verticalStart =\n      Number(startTime.format(\"HH\")) * 2 +\n      Math.floor(Number(startTime.format(\"mm\")) / 30);\n    for (let index in roomIds) {\n      let roomId = roomIds[index];\n      schedulesLocal[roomId][verticalStart] = {\n        uuid: uuid,\n        roomId: roomId,\n        startTime: startTime,\n        endTime: endTime,\n        userName: userName,\n        content: content,\n        cellHeight: cellHeight\n      };\n      // 一度目のiteration以外0になる\n      schedulesLocal[roomId][verticalStart].cellWidth = cellWidth;\n      cellWidth = 0;\n    }\n  }\n  return schedulesLocal;\n};\n","\n\n// Formが変化する\nexport const TOGGLE_FORM_VISIBLE = 'TOGGLE_FORM_VISIBLE';\nexport const SELECT_BLANK = 'SELECT_BLANK';\nexport const SELECT_SCHEDULE = 'SELECT_SCHEDULE';\nexport const CHANGE_FORM_VALUE = 'CHANGE_FORM_VALUE';\nexport const CHANGE_EDIT_VALUE = 'CHANGE_EDIT_VALUE';\nexport const TOGGLE_ROOM_CHECK = 'TOGGLE_ROOM_CHECK';\nexport const TOGGLE_EDIT_FORM = 'TOGGLE_EDIT_FORM';\nexport const TOGGLE_ROOM_CHECK_IN_EDITING = 'TOGGLE_ROOM_CHECK_IN_EDITING'\n\n\n// 通信\n\nexport const REQUEST_DELETE = 'SEND_DELETE';\nexport const SEND_PATCH = 'SEND_PATCH';\nexport const SEND_POST = 'SEND_POST';\nexport const FETCH_ALL_SCHEDULES = 'FETCH_ALL_SCHEDULES';\n\n// 一般\nexport const UPDATE_TIME = 'UPDATE_TIME';\nexport const SELECT_DATE = 'SELECT_DATE';\nexport const ADD_DATE = 'ADD_DATE';\nexport const TO_TODAY = 'TO_TODAY';\n\n\n\n\n\n","import {\n  TOGGLE_FORM_VISIBLE,\n  SELECT_BLANK,\n  SELECT_SCHEDULE,\n  CHANGE_FORM_VALUE,\n  CHANGE_EDIT_VALUE,\n  TOGGLE_ROOM_CHECK,\n  TOGGLE_ROOM_CHECK_IN_EDITING,\n  TOGGLE_EDIT_FORM\n} from \"../actions/types\";\nimport moment from \"moment\";\n\nexport const changeFormValue = (target, value) => dispatch => {\n  dispatch({\n    type: CHANGE_FORM_VALUE,\n    payload: { target: target, value, value }\n  });\n};\nexport const changeEditValue = (target, value) => dispatch => {\n  dispatch({\n    type: CHANGE_EDIT_VALUE,\n    payload: { target: target, value: value }\n  });\n};\nexport const selectBlank = (startTime, roomId) => dispatch => {\n  dispatch({\n    type: SELECT_BLANK,\n    payload: {\n      startTime: moment(startTime).format(\"YYYY-MM-DD HH:mm:00\"),\n      endTime:moment(startTime).add(30,\"m\").format(\"YYYY-MM-DD HH:mm:00\"),\n      roomId: roomId\n    }\n  });\n};\nexport const toggleFormVisible = () => dispatch => {\n  dispatch({\n    type: TOGGLE_FORM_VISIBLE,\n    payload: {}\n  });\n};\n\nexport const toggleRoomCheck = roomId => dispatch => {\n  dispatch({\n    type: TOGGLE_ROOM_CHECK,\n    payload: Number(roomId)\n  });\n};\nexport const toggleRoomCheckInEditing = roomId => dispatch => {\n  dispatch({\n    type: TOGGLE_ROOM_CHECK_IN_EDITING,\n    payload: roomId\n  });\n};\n\nconst _constructRoomSelected = (roomIds) =>{\n  const roomSelected = {};\n  for(let i=1;i<=8;i++){\n    if(roomIds.indexOf(i)>=0){\n      roomSelected[i] = true;\n    }else{\n      roomSelected[i]=false;\n    }\n  }\n  return roomSelected;\n}\nexport const selectSchedule = uuid => dispatch => {\n  \n  fetch(\"http://35.211.249.14/\" + uuid, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(response => {\n      if (!response.ok) {\n        alert(\"失敗しました.すでに存在しない予定の可能性があります.\")\n        throw Error(response.statusText);\n      }\n      return response.json();\n    })\n    .then(responseData => {\n      const data = responseData[\"schedule\"];\n      const schedule = {\n        uuid: data.uuid,\n        startTime: moment(String(data.start_time)).format(\"YYYY-MM-DD HH:mm:ss\"),\n        endTime: moment(String(data.end_time)).format(\"YYYY-MM-DD HH:mm:ss\"),\n        userName: data.user_name,\n        content: data.content,\n        created: data.created,\n        edited: data.edited,\n        roomIds:data.room_ids,\n        \n      };\n      return schedule;\n    })\n    .then(schedule => {\n      dispatch({\n        type: SELECT_SCHEDULE,\n        payload: {\n          schedule:schedule,\n          roomSelected:_constructRoomSelected(schedule.roomIds)}\n      });\n    });\n};\n\nexport const toggleEditForm = () => dispatch => {\n  dispatch({\n    type: TOGGLE_EDIT_FORM,\n    payload: {}\n  });\n};\n","import { UPDATE_TIME,SELECT_DATE,ADD_DATE,TO_TODAY } from \"./types\";\nimport moment from 'moment';\nexport const updateTime = () => dispatch => {\n  const datetime = moment();\n    dispatch({\n    type: UPDATE_TIME,\n    payload: {\n        isoWeekday:datetime.isoWeekday(),\n        year:datetime.format(\"YYYY\"),\n        month:datetime.format(\"MM\"),\n        date:datetime.format(\"DD\"),\n        hour:datetime.format(\"HH\"),\n        minute:datetime.format(\"mm\")\n    }\n  });\n};\n\nexport const selectDate = (targetDate) =>dispatch =>{\n    const targetDateMoment = moment(targetDate);\n    dispatch({\n        type:SELECT_DATE,\n        payload:{\n            year:targetDateMoment.format(\"YYYY\"),\n            month:targetDateMoment.format(\"MM\"),\n            date:targetDateMoment.format(\"DD\"),\n            isoWeekday:targetDateMoment.isoWeekday()\n        }\n    })\n}\n\nexport const addDate = (addNum,year,month,date) => dispatch =>{\n    const targetDatetime = moment().set({\n        year: year,\n        month: month - 1,\n        date: date\n      });\n      targetDatetime.add(addNum,\"day\")\n    dispatch({\n        type:ADD_DATE,\n        payload:{\n            year:targetDatetime.format(\"YYYY\"),\n            month:targetDatetime.format(\"MM\"),\n            date:targetDatetime.format(\"DD\"),\n            isoWeekday:targetDatetime.isoWeekday()\n        }\n\n    })\n}\nexport const toToday = ()=>dispatch =>{\n     const today = moment();\n     dispatch({\n         type:TO_TODAY,\n         payload:{\n             year:today.format(\"YYYY\"),\n             month:today.format(\"MM\"),\n             date:today.format(\"DD\"),\n             isoWeekday:today.isoWeekday()\n         },\n     }) \n}\n","import React from \"react\";\n\n\n\nconst RoomChoice =(props)=>{\n    const roomChoiceArray = {\n        1:\"会議室1\",\n        2:\"会議室2\",\n        3:\"会議室3\",\n        4:\"会議室4\",\n        5:\"会議室5\",\n        6:\"会議室6\",\n        7:\"会議室7\",\n        8:\"会議室8\",\n\n}\nconst choiceElements = []\nfor(let i in roomChoiceArray){\n    if(props.roomIds.indexOf(Number(i))>=0){\n    choiceElements.push(\n        <div class=\"box-roomChoice\">\n        <input type=\"checkbox\" className=\"select-input-01-checked\" name=\"room-choice\" id={`room-choice-${i}`} value={i} onClick={(e)=>{props.roomCheckAction(e.target.value)}} checked/>\n        <label for={`room-choice-${i}`} className=\"select-label-01-checked\" onClick={(e)=>{props.roomCheckAction(e.target.value)}}>{roomChoiceArray[i]}</label>\n        </div>\n    )\n    }else{\n        choiceElements.push(\n        <div class=\"box-roomChoice\">\n        <input type=\"checkbox\" className=\"select-input-01\" name=\"room-choice\" id={`room-choice-${i}`} value={i} onClick={(e)=>{props.roomCheckAction(e.target.value)}}/>\n        <label for={`room-choice-${i}`}  className=\"select-label-01\" onClick={(e)=>{props.roomCheckAction(e.target.value)}}>{roomChoiceArray[i]}</label>\n        </div>)\n    }\n\n}\n    return(\n        <div class=\"flex-row-100\">\n            {choiceElements.map((elem)=>{\n                return(elem);\n            })}\n        </div>\n    )\n}\n\nexport default RoomChoice;","import React from \"react\";\n\nconst TimeSelect = props => {\n  return (<select name={`time-select-${props.name}`} class=\"time-select-01\">\n  {props.timeList.map((time, index)=>{\n      if(props.initialValue==`${time}:00`){// satteに保管される値はHH:mm:ssなので付け足してチェック\n      return(<option value={time} selected class=\"time-option-01-selected\">{time}</option>)}\n      else{\n        return(<option value={time} class=\"time-option-01\">{time}</option>)\n      }\n  })}</select>);\n};\n\nexport default TimeSelect;","import React, { Component } from \"react\";\nimport RoomChoice from \"../components/RoomChoice\";\nimport TimeSelect from \"../components/TimeSelect\";\nimport { connect } from \"react-redux\";\nimport { fetchAllSchedules, sendPost } from \"../actions/api_actions\";\nimport {\n  toggleFormVisible,\n  toggleRoomCheck,\n  changeFormValue\n} from \"../actions/form_actions\";\n\nclass PostForm extends Component {\n    backAction=(e)=>{\n      e.preventDefault(); \n        this.props.toggleFormVisible();\n        this.props.fetchAllSchedules(`${this.props.targetYear}-${this.props.targetMonth}-${\n            this.props.targetDate\n          }`);\n    }\n    registAction = (e) =>{\n      e.preventDefault(); \n      const promise = new Promise((resolve,reject)=>{\n        this.props.sendPost(this.props.insertSchedule);\n        resolve();\n      })\n      promise.then(()=>{\n        this.props.fetchAllSchedules(`${this.props.targetYear}-${this.props.targetMonth}-${\n          this.props.targetDate\n        }`);\n      }).then(()=>{\n        this.props.toggleFormVisible();\n      })\n    }\n    changeFormValueAction = (e) =>{\n        this.props.changeFormValue(e.target.name,e.target.value)\n    }\n    componentWillMount(){\n        this.changeFormValueAction = this.changeFormValueAction.bind(this);\n    }\n  render() {\n    const schedule=this.props.insertSchedule;\n    // formVisibleの値によって適用\n    const formStyle = { display: \"none\" };\n    if (this.props.formVisible) {\n      formStyle.display = \"flex\";\n    }\n    return (\n      <div className=\"box-postForm\" style={formStyle}>\n      <form  className=\"form-simple-01\">\n      <div class=\"flex-row-90\">\n        <TimeSelect name=\"startTime\" initialValue={schedule.startTime.split(' ')[1]} timeList={this.props.timeList} />\n        から\n        <TimeSelect name=\"endTime\" initialValue={schedule.endTime.split(' ')[1]} timeList={this.props.timeList}/>\n        まで\n        </div>\n        <div className=\"flex-row-90\">\n        <RoomChoice roomIds={schedule.roomIds} roomCheckAction={this.props.toggleRoomCheck}/>\n        </div>\n        <div className=\"flex-row-90\">\n        <input type=\"text\" className=\"input-text-01\" placeholder=\"名前を入力してください\" name=\"userName\" onChange={this.changeFormValueAction}/>\n        </div>\n        <div className=\"flex-row-90\">\n        <textarea placeholder=\"内容を入力してください\" className=\"input-text-02\" name=\"content\" onChange={this.changeFormValueAction}/>\n        </div>\n        <div className=\"flex-end-90\">\n        <button onClick={this.backAction} className=\"btn-simple-01\">戻る</button>\n        <button onClick={this.registAction} className=\"btn-simple-01\">登録</button>\n        </div>\n      </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  formVisible: state.form.formVisible,\n  insertSchedule: state.form.insertSchedule,\n  roomSelected: {\n    1: state.form.roomSelected[1],\n    2: state.form.roomSelected[2],\n    3: state.form.roomSelected[3],\n    4: state.form.roomSelected[4],\n    5: state.form.roomSelected[5],\n    6: state.form.roomSelected[6],\n    7: state.form.roomSelected[7],\n    8: state.form.roomSelected[8]\n  },\n  targetYear: state.general.targetYear,\n  targetMonth: state.general.targetMonth,\n  targetDate: state.general.targetDate\n});\nexport default connect(\n  mapStateToProps,\n  {\n    toggleFormVisible,\n    changeFormValue,\n    sendPost,\n    toggleRoomCheck,\n    fetchAllSchedules\n  })(\n  PostForm\n);\n","import React from \"react\";\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport { Button } from \"@material-ui/core\";\n\nconst ScheduleTimeRow = (props) =>{\n    return(\n        <ul class=\"box-scheduleTimeRow\">\n        \n        <li class=\"box-scheduleHeader\"></li>\n        {props.timeList.map((value,index)=>{\n            if(index%2==0){\n            return(<li class=\"item-scheduleTimeRow box-even\">{value}</li>)\n        }else{\n            return(<li class=\"item-scheduleTimeRow box-odd\">{value}</li>)\n        }\n        })}\n        </ul>\n    )\n}\nexport default ScheduleTimeRow;","import React, { Component } from \"react\";\nimport ScheduleRow from \"../components/ScheduleRow\";\nimport { connect } from \"react-redux\";\nimport { fetchAllSchedules } from \"../actions/api_actions\";\nimport { selectBlank, selectSchedule,toggleEditForm } from \"../actions/form_actions\";\nimport { updateTime, toToday } from \"../actions/general_action\";\nimport PostForm from \"./PostForm\";\nimport ScheduleTimeRow from \"../components/ScheduleTimeRow\";\n\n\nclass Schedules extends Component {\n  componentWillMount() {\n    setInterval(() => {\n    //   2分ごとに実行\n      this.props.fetchAllSchedules(\n        `${this.props.targetYear}-${this.props.targetMonth}-${\n          this.props.targetDate\n        }`\n      );\n      this.props.updateTime();\n    }, 120000);\n  }\n  componentDidMount(){\n    this.props.fetchAllSchedules(\n        `${this.props.targetYear}-${this.props.targetMonth}-${\n          this.props.targetDate\n        }`\n      );\n  }\n  render() {\n    const roomIdArray = [];\n    for (let i = 1; i <= 8; i++) {\n      roomIdArray.push(i);\n    }\n\n    return (\n      <div class=\"box-schedules\">\n      <ScheduleTimeRow timeList={this.props.timeList}/>\n        {roomIdArray.map(roomId => {\n          return (\n            <ScheduleRow\n            timeList={this.props.timeList}\n              key={roomId}\n              roomId={roomId}\n              scheduleList={this.props.schedules[roomId]}\n              targetDatetime = {`${this.props.targetYear}-${this.props.targetMonth}-${this.props.targetDate}`}\n              editEvent={(uuid)=>{\n                this.props.selectSchedule(uuid);\n                this.props.toggleEditForm();\n              }}\n              postEvent={this.props.selectBlank}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  schedules: state.api.schedules,\n  currentHour: state.general.currentHour,\n  currentMinute: state.general.currentMinute,\n  targetYear: state.general.targetYear,\n  targetMonth: state.general.targetMonth,\n  targetDate: state.general.targetDate\n});\n\nexport default connect(\n  mapStateToProps,\n  { fetchAllSchedules, selectBlank, selectSchedule, updateTime, toToday , toggleEditForm}\n)(Schedules);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport RoomChoice from \"../components/RoomChoice\";\nimport TimeSelect from \"../components/TimeSelect\";\nimport { fetchAllSchedules, sendPatch } from \"../actions/api_actions\";\nimport {\n  toggleEditForm,\n  toggleRoomCheckInEditing,\n  changeEditValue\n} from \"../actions/form_actions\";\n\nclass EditForm extends Component {\n  backAction = e => {\n    e.preventDefault();\n    this.props.toggleEditForm();\n    this.props.fetchAllSchedules(\n      `${this.props.targetYear}-${this.props.targetMonth}-${\n        this.props.targetDate\n      }`\n    );\n  };\n  patchAction = e => {\n    e.preventDefault();\n    \n      const promise = new Promise((resolve, reject) => {\n        this.props.sendPatch(this.props.schedule);\n        resolve();\n      });\n      \n        promise.then(() => {\n            this.props.fetchAllSchedules(\n              `${this.props.targetYear}-${this.props.targetMonth}-${\n                this.props.targetDate\n              }`\n            );\n                  \n      }).then(()=>{\n        this.props.toggleEditForm();\n      })\n    \n          \n    }\n  render() {\n    const schedule = this.props.schedule;\n    const formStyle = { display: \"none\" };\n    if (this.props.editing) {\n      formStyle.display = \"flex\";\n    }\n    return (\n      <div style={formStyle} className=\"box-editForm\">\n        <form className=\"form-simple-01\">\n          <div class=\"flex-row-90\">\n            <TimeSelect\n              name=\"startTime\"\n              initialValue={schedule.startTime.split(\" \")[1]}\n              timeList={this.props.timeList}\n            />\n            から\n            <TimeSelect\n              name=\"endTime\"\n              initialValue={schedule.endTime.split(\" \")[1]}\n              timeList={this.props.timeList}\n            />\n            まで\n          </div>\n          <div className=\"flex-row-90\">\n            <RoomChoice\n              roomIds={schedule.roomIds}\n              roomCheckAction={this.props.toggleRoomCheckInEditing}\n            />\n          </div>\n          <div className=\"flex-row-90\">\n            <input\n              type=\"text\"\n              className=\"input-text-01\"\n              placeholder=\"名前を入力してください\"\n              name=\"userName\"\n              value={schedule.userName}\n              onChange={e => {\n                this.props.changeEditValue(e.target.name, e.target.value);\n              }}\n            />\n          </div>\n          <div className=\"flex-row-90\">\n            <textarea\n              placeholder=\"内容を入力してください\"\n              className=\"input-text-02\"\n              name=\"content\"\n              value={schedule.content}\n              onChange={e => {\n                this.props.changeEditValue(e.target.name, e.target.value);\n              }}\n            />\n          </div>\n          <div className=\"flex-end-90\">\n            <button className=\"btn-simple-01\" onClick={this.backAction}>\n              戻る\n            </button>\n            <button className=\"btn-simple-01\" onClick={this.patchAction}>\n              登録\n            </button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  schedule: {\n    uuid: state.form.scheduleTouched.uuid,\n    edited: state.form.scheduleTouched.edited,\n    created: state.form.scheduleTouched.created,\n    content: state.form.scheduleTouched.content,\n    userName: state.form.scheduleTouched.userName,\n    roomIds: state.form.scheduleTouched.roomIds,\n    startTime: state.form.scheduleTouched.startTime,\n    endTime: state.form.scheduleTouched.endTime\n  },\n  editing: state.form.editing,\n  roomSelected: {\n    1: state.form.roomSelected[1],\n    2: state.form.roomSelected[2],\n    3: state.form.roomSelected[3],\n    4: state.form.roomSelected[4],\n    5: state.form.roomSelected[5],\n    6: state.form.roomSelected[6],\n    7: state.form.roomSelected[7],\n    8: state.form.roomSelected[8]\n  },\n  targetYear: state.general.targetYear,\n  targetMonth: state.general.targetMonth,\n  targetDate: state.general.targetDate\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    fetchAllSchedules,\n    sendPatch,\n    toggleEditForm,\n    toggleRoomCheckInEditing,\n    changeEditValue\n  }\n)(EditForm);\n","import React,{Component} from \"react\";\nimport {selectDate,addDate,toToday} from '../actions/general_action';\nimport {connect} from \"react-redux\";\nimport { fetchAllSchedules } from \"../actions/api_actions\";\nimport moment from \"moment\";\nimport DatePicker from \"react-datepicker\";\nimport 'react-datepicker/dist/react-datepicker.css';\n\nclass DatePickerFrame extends Component {\n    onClickDatePicker = (datetime) =>{\n        const promise = new Promise((resolve,reject)=>{\n          this.props.selectDate(datetime.format(\"YYYY-MM-DD\"));\n          resolve();\n        })\n        promise.then(()=>{\n          this.props.fetchAllSchedules(\n            `${this.props.targetYear}-${this.props.targetMonth}-${\n              this.props.targetDate\n            }`\n        )\n      })\n    }\n    render(){\n        let targetDateTime = moment(\n            `${this.props.targetYear}-${this.props.targetMonth}-${\n              this.props.targetDate\n            }`\n          );\n        return(\n            <div>\n         <DatePicker\n         selected={targetDateTime}\n              onChange={this.onClickDatePicker}\n         />   \n         </div>\n        )\n    }\n}\n\nconst mapStateToProps = state =>({\n    targetYear: state.general.targetYear,\n  targetMonth: state.general.targetMonth,\n  targetDate: state.general.targetDate,\n  targetDay: state.general.targetDay\n})\n\nexport default connect(\n    mapStateToProps,\n    {\n        selectDate, addDate, fetchAllSchedules, toToday \n    }\n)(DatePickerFrame)","import React, { Component } from \"react\";\nimport \"App.css\";\nimport \"./stylesheets/cell.css\";\nimport Schedules from \"containers/Schedules\";\nimport PostForm from \"containers/PostForm\";\nimport EditForm from \"containers/Editform\";\nimport DatePicker from \"containers/DatePicker\";\n\nconst timeList = [\n  \"00:00\",\n  \"00:30\",\n  \"01:00\",\n  \"01:30\",\n  \"02:00\",\n  \"02:30\",\n  \"03:00\",\n  \"03:30\",\n  \"04:00\",\n  \"04:30\",\n  \"05:00\",\n  \"05:30\",\n  \"06:00\",\n  \"06:30\",\n  \"07:00\",\n  \"07:30\",\n  \"08:00\",\n  \"08:30\",\n  \"09:00\",\n  \"09:30\",\n  \"10:00\",\n  \"10:30\",\n  \"11:00\",\n  \"11:30\",\n  \"12:00\",\n  \"12:30\",\n  \"13:00\",\n  \"13:30\",\n  \"14:00\",\n  \"14:30\",\n  \"15:00\",\n  \"15:30\",\n  \"16:00\",\n  \"16:30\",\n  \"17:00\",\n  \"17:30\",\n  \"18:00\",\n  \"18:30\",\n  \"19:00\",\n  \"19:30\",\n  \"20:00\",\n  \"20:30\",\n  \"21:00\",\n  \"21:30\",\n  \"22:00\",\n  \"22:30\",\n  \"23:00\",\n  \"23:30\",\n  \"00:00\",\n];\n\nclass App extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <DatePicker/>\n        <Schedules timeList={timeList}/>\n        <PostForm timeList={timeList}/>\n        <EditForm timeList={timeList}/>\n        </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n    SELECT_DATE,\n    REQUEST_DELETE,\n    SEND_PATCH,\n    SEND_POST,\n    FETCH_ALL_SCHEDULES\n  } from \"../actions/types\";\n\n\nconst initialState = {\n    schedules :{\n        1:{},\n        2:{},\n        3:{},\n        4:{},\n        5:{},\n        6:{},\n        7:{},\n        8:{},\n \n    },\n}\n\nexport default function(state=initialState,action){\n    switch(action.type){\n        case FETCH_ALL_SCHEDULES:\n        return {schedules:action.payload}\n        case REQUEST_DELETE,SEND_PATCH,SEND_POST:\n        return state\n        default:\n        return state\n}\n}","import {\n  TOGGLE_FORM_VISIBLE,\n  SELECT_BLANK,\n  SELECT_SCHEDULE,\n  CHANGE_FORM_VALUE,\n  CHANGE_EDIT_VALUE,\n  TOGGLE_ROOM_CHECK,\n  TOGGLE_EDIT_FORM,\n  TOGGLE_ROOM_CHECK_IN_EDITING\n} from \"../actions/types\";\n\nconst initialState = {\n  roomTouched: 0,\n  scheduleTouched: {\n    uuid: \"\",\n    roomIds: [],\n    startTime: \"0000-00-00 00:00:00\",\n    endTime: \"0000-00-00 00:00:00\",\n    userName: \"\",\n    content: \"\",\n    edited: \"\",\n    created: \"\"\n  },\n  formVisible: false,\n  editing: false,\n  insertSchedule: {\n    roomIds: [],\n    startTime: \"0000-00-00 00:00:00\",\n    endTime: \"0000-00-00 00:00:00\",\n    userName: \"\",\n    content: \"\"\n  },\n  roomSelected: {\n    1: false,\n    2: false,\n    3: false,\n    4: false,\n    5: false,\n    6: false,\n    7: false,\n    8: false\n  }\n};\n\nexport default function(state = initialState, action) {\n  const stateNext = Object.assign({}, state);\n  switch (action.type) {\n    case TOGGLE_EDIT_FORM:\n      stateNext.editing = !stateNext.editing;\n      stateNext.roomSelected = {\n        1: false,\n        2: false,\n        3: false,\n        4: false,\n        5: false,\n        6: false,\n        7: false,\n        8: false\n      };\n      return stateNext;\n    case SELECT_SCHEDULE:\n      stateNext.editing = true;\n      const scheduleTouched = action.payload[\"schedule\"];\n      stateNext.scheduleTouched = scheduleTouched;\n      stateNext.roomSelected = action.payload[\"roomSelected\"];\n      return stateNext;\n    case CHANGE_FORM_VALUE:\n      const target = action.payload.target;\n      const value = action.payload.value;\n      stateNext.insertSchedule[target] = value;\n      return stateNext;\n    case CHANGE_EDIT_VALUE:\n      const k = action.payload.target;\n      const v = action.payload.value;\n      stateNext.scheduleTouched[k] = v;\n\n      return stateNext;\n    case SELECT_BLANK:\n      stateNext.insertSchedule.roomIds = [action.payload.roomId];\n      stateNext.roomSelected[action.payload.roomId] = true;\n      stateNext.insertSchedule.startTime = action.payload.startTime;\n      stateNext.insertSchedule.endTime = action.payload.endTime;\n      stateNext.formVisible = true;\n      return stateNext;\n    case TOGGLE_FORM_VISIBLE:\n      return initialState;\n    case TOGGLE_ROOM_CHECK:\n      const roomIds = action.payload;\n      stateNext.roomSelected[roomIds] = !stateNext.roomSelected[roomIds];\n      const index = stateNext.insertSchedule.roomIds.indexOf(roomIds);\n      if (index >= 0) {\n        // すでに存在する場合削除\n        stateNext.insertSchedule.roomIds.splice(index, 1);\n      } else {\n        //まだない場合追加\n        stateNext.insertSchedule.roomIds.push(action.payload);\n      }\n      return stateNext;\n    case TOGGLE_ROOM_CHECK_IN_EDITING:\n      //タッチされたidを受け取る\n      const roomIdsEditing = action.payload;\n      // 値をトグル\n      stateNext.roomSelected[roomIdsEditing] = !stateNext.roomSelected[\n        roomIdsEditing\n      ];\n\n      const indexEditing = stateNext.scheduleTouched.roomIds.indexOf(\n        roomIdsEditing\n      );\n      if (indexEditing >= 0) {\n        // すでに存在する場合削除\n        stateNext.scheduleTouched.roomIds.splice(indexEditing, 1);\n      } else {\n        //まだない場合追加\n        stateNext.scheduleTouched.roomIds.push(roomIdsEditing);\n      }\n\n      return stateNext;\n    default:\n      return Object.assign({}, state);\n  }\n}\n","import { UPDATE_TIME, SELECT_DATE, ADD_DATE, TO_TODAY } from \"../actions/types\";\nimport moment from 'moment';\nconst initialState = {\n  currentYear: moment().format(\"YYYY\"),\n  currentMonth: moment().format(\"MM\"),\n  currentDate: moment().format(\"DD\"),\n  currentDay: moment().isoWeekday(),\n  currentHour: moment().format(\"HH\"),\n  currentMinute: moment().format(\"mm\"),\n  targetYear: moment().format(\"YYYY\"),\n  targetMonth: moment().format(\"MM\"),\n  targetDay: parseDayToJa(moment().isoWeekday()),\n  targetDate: moment().format(\"DD\")\n};\n\nfunction parseDayToJa(Day) {\n  switch (Day) {\n    case 1:\n      return \"月\";\n    case 2:\n      return \"火\";\n    case 3:\n      return \"水\";\n    case 4:\n      return \"木\";\n    case 5:\n      return \"金\";\n    case 6:\n      return \"土\";\n    case 7:\n      return \"日\";\n  }\n}\n\nexport default function(state = initialState, action) {\n  const nextState = Object.assign({}, state);\n  switch (action.type) {\n    case UPDATE_TIME:\n      nextState.currentDay = parseDayToJa(action.payload.isoWeekday);\n      nextState.currentYear = action.payload.year;\n      nextState.currentMonth = action.payload.month;\n      nextState.currentDate = action.payload.date;\n      nextState.currentHour = action.payload.hour;\n      nextState.currentMinute = action.payload.minute;\n      return nextState;\n    case SELECT_DATE:\n      nextState.targetYear = action.payload.year;\n      nextState.targetMonth = action.payload.month;\n      nextState.targetDate = action.payload.date;\n      nextState.targetDay = parseDayToJa(action.payload.isoWeekday);\n      return nextState;\n    case ADD_DATE:\n      \n      nextState.targetYear = action.payload.year\n      nextState.targetMonth = action.payload.month;\n      nextState.targetDate = action.payload.date;\n      nextState.targetDay = parseDayToJa(action.payload.isoWeekday);\n      return nextState;\n    case TO_TODAY:\n      nextState.targetYear = action.payload.year;\n      nextState.targetMonth = action.payload.month;\n      nextState.targetDate = action.payload.date;\n      nextState.targetDay = parseDayToJa(action.payload.isoWeekday);\n      return nextState;\n    default:\n      return nextState;\n  }\n}\n","import {combineReducers} from 'redux';\nimport apiReducers from './apiReducers';\nimport formReducers from './formReducers';\nimport generalReducers from './generalReducers';\nimport { createGenerateClassName } from '@material-ui/core';\n\nexport default combineReducers({\n    api:apiReducers,\n    form:formReducers,\n    general:generalReducers,\n})","import {createStore,applyMiddleware,compose} from 'redux';\nimport rootReducer from \"./reducers\";\nimport thunk from \"redux-thunk\";\n\n\nconst initialState = {};\nconst middleware = [thunk];\n\n\nconst store = createStore(\n    rootReducer,\n    initialState,\n    compose(\n        applyMiddleware(...middleware)\n       //,window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__() // Redux Dev Tool使用のための設定\n    )\n)\n\nexport default store;","import React from \"react\";\nimport store from \"./store\";\nimport { Provider } from \"react-redux\";\n\n\nconst Root = (props)=>{\n    return(\n        <Provider store={store}>\n        {props.children}\n        </Provider>\n    )\n}\nexport default Root;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Root from \"./Root\";\n\nReactDOM.render(<Root><App /></Root>, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}