{"version":3,"sources":["components/RoomChoice.js","components/TimeSelect.js","containers/EditForm.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","RoomChoice","props","roomChoiceArray","1","2","3","4","5","6","7","8","choiceElements","_loop","i","roomIds","indexOf","Number","push","a","createElement","class","type","className","name","id","concat","onClick","e","roomCheckAction","value","checked","map","elem","TimeSelect","onChange","targetDate","target","timeList","time","index","initialValue","selected","EditForm","targetDateTime","_this","targetYear","targetMonth","backAction","preventDefault","toggleEditForm","fetchAllSchedules","deleteAction","Promise","resolve","reject","requestDelete","schedule","uuid","then","setTimeout","patchAction","sendPatch","_this2","this","formStyle","display","editing","react__WEBPACK_IMPORTED_MODULE_5___default","style","_components_TimeSelect__WEBPACK_IMPORTED_MODULE_8__","startTime","split","changeEditValue","endTime","_components_RoomChoice__WEBPACK_IMPORTED_MODULE_7__","toggleRoomCheckInEditing","placeholder","userName","content","Component","connect","state","form","scheduleTouched","edited","created","roomSelected","general"],"mappings":"0FAAA,IAAAA,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GA2CeI,IAvCG,SAACC,GACf,IAAMC,EAAkB,CACpBC,EAAE,sBACFC,EAAE,sBACFC,EAAE,sBACFC,EAAE,sBACFC,EAAE,sBACFC,EAAE,sBACFC,EAAE,sBACFC,EAAE,uBAGJC,EAAiB,GAZIC,EAAA,SAanBC,GACDZ,EAAMa,QAAQC,QAAQC,OAAOH,KAAK,EACrCF,EAAeM,KACXnB,EAAAoB,EAAAC,cAAA,OAAKC,MAAM,kBACXtB,EAAAoB,EAAAC,cAAA,SAAOE,KAAK,WAAWC,UAAU,0BAA0BC,KAAK,cAAcC,GAAE,eAAAC,OAAiBZ,GAAOa,QAAS,SAACC,GAAK1B,EAAM2B,gBAAgBf,IAAKgB,MAAOhB,EAAGiB,SAAO,IACnKhC,EAAAoB,EAAAC,cAAA,SAAQG,UAAU,0BAA0BI,QAAS,SAACC,GAAK1B,EAAM2B,gBAAgBf,KAAMX,EAAgBW,MAIvGF,EAAeM,KACfnB,EAAAoB,EAAAC,cAAA,OAAKC,MAAM,kBACXtB,EAAAoB,EAAAC,cAAA,SAAOE,KAAK,WAAWC,UAAU,kBAAkBC,KAAK,cAAcC,GAAE,eAAAC,OAAiBZ,GAAKgB,MAAOhB,EAAKa,QAAS,SAACC,GAAK1B,EAAM2B,gBAAgBf,MAC/If,EAAAoB,EAAAC,cAAA,SAAOG,UAAU,kBAAkBI,QAAS,SAACC,GAAK1B,EAAM2B,gBAAgBf,KAAMX,EAAgBW,OAZtG,IAAI,IAAIA,KAAKX,EAAgBU,EAArBC,GAiBJ,OACIf,EAAAoB,EAAAC,cAAA,OAAKC,MAAM,gBACNT,EAAeoB,IAAI,SAACC,GACjB,OAAOA,wCCrCvB,IAAApC,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAaeqC,IAXI,SAAAhC,GACjB,OAAQH,EAAAoB,EAAAC,cAAA,UAAQI,KAAI,eAAAE,OAAiBxB,EAAMsB,MAAQH,MAAM,iBAAiBc,SAAU,SAACP,GAAK1B,EAAMiC,SAASjC,EAAMsB,KAAKtB,EAAMkC,WAAa,IAAMR,EAAES,OAAOP,MAAM,SAC3J5B,EAAMoC,SAASN,IAAI,SAACO,EAAMC,GACvB,OAAGtC,EAAMuC,cAAN,GAAAf,OAAuBa,EAAvB,OACIxC,EAAAoB,EAAAC,cAAA,UAAQU,MAAOS,EAAMG,UAAQ,EAACrB,MAAM,2BAA2BkB,GAE7DxC,EAAAoB,EAAAC,cAAA,UAAQU,MAAOS,EAAMlB,MAAM,kBAAkBkB,sJCOtDI,6MACFC,eAAiB,WACb,SAAAlB,OAAUmB,EAAK3C,MAAM4C,WAArB,KAAApB,OAAmCmB,EAAK3C,MAAM6C,YAA9C,KAAArB,OACAmB,EAAK3C,MAAMkC,eAGjBY,WAAa,SAAApB,GACXA,EAAEqB,iBACFJ,EAAK3C,MAAMgD,iBACXL,EAAK3C,MAAMiD,kBACTN,EAAKD,qBAGTQ,aAAe,SAAAxB,GACbA,EAAEqB,iBACc,IAAII,QAAQ,SAACC,EAASC,GACpCV,EAAK3C,MAAMsD,cAAcX,EAAK3C,MAAMuD,SAASC,MAC7CJ,MAEMK,KAAK,WACXd,EAAK3C,MAAMgD,iBACXL,EAAK3C,MAAMiD,kBACTN,EAAKD,kBAEPgB,WAAW,WACTf,EAAK3C,MAAMiD,kBACTN,EAAKD,mBAEN,WAGPiB,YAAc,SAAAjC,GACZA,EAAEqB,iBAEc,IAAII,QAAQ,SAACC,EAASC,GACpCV,EAAK3C,MAAM4D,UAAUjB,EAAK3C,MAAMuD,UAChCH,MAGMK,KAAK,WACXd,EAAK3C,MAAMgD,iBACXL,EAAK3C,MAAMiD,kBACTN,EAAKD,kBAEPgB,WAAW,WACTf,EAAK3C,MAAMiD,kBACPN,EAAKD,mBAER,gFAGE,IAAAmB,EAAAC,KACDP,EAAWO,KAAK9D,MAAMuD,SACtBQ,EAAY,CAAEC,QAAS,QAI7B,OAHIF,KAAK9D,MAAMiE,UACbF,EAAUC,QAAU,QAGpBE,EAAAjD,EAAAC,cAAA,OAAKiD,MAAOJ,EAAW1C,UAAU,gBAC/B6C,EAAAjD,EAAAC,cAAA,QAAMG,UAAU,kBACd6C,EAAAjD,EAAAC,cAAA,OAAKC,MAAM,eACT+C,EAAAjD,EAAAC,cAACkD,EAAA,EAAD,CACE9C,KAAK,YACLiB,aAAcgB,EAASc,UAAUC,MAAM,KAAK,GAC5ClC,SAAU0B,KAAK9D,MAAMoC,SACrBR,MAAO2B,EAASc,UAChBpC,SAAU6B,KAAK9D,MAAMuE,gBACrBrC,WAAY4B,KAAKpB,mBAPrB,eAUEwB,EAAAjD,EAAAC,cAACkD,EAAA,EAAD,CACE9C,KAAK,UACLiB,aAAcgB,EAASiB,QAAQF,MAAM,KAAK,GAC1ClC,SAAU0B,KAAK9D,MAAMoC,SACrBR,MAAO2B,EAASiB,QAChBvC,SAAU6B,KAAK9D,MAAMuE,gBACrBrC,WAAY4B,KAAKpB,mBAhBrB,gBAoBAwB,EAAAjD,EAAAC,cAAA,OAAKG,UAAU,eACb6C,EAAAjD,EAAAC,cAACuD,EAAA,EAAD,CACE5D,QAAS0C,EAAS1C,QAClBc,gBAAiBmC,KAAK9D,MAAM0E,4BAGhCR,EAAAjD,EAAAC,cAAA,OAAKG,UAAU,eACb6C,EAAAjD,EAAAC,cAAA,SACEE,KAAK,OACLC,UAAU,gBACVsD,YAAY,qEACZrD,KAAK,WACLM,MAAO2B,EAASqB,SAChB3C,SAAU,SAAAP,GACRmC,EAAK7D,MAAMuE,gBAAgB7C,EAAES,OAAOb,KAAMI,EAAES,OAAOP,WAIzDsC,EAAAjD,EAAAC,cAAA,OAAKG,UAAU,eACb6C,EAAAjD,EAAAC,cAAA,YACEyD,YAAY,qEACZtD,UAAU,gBACVC,KAAK,UACLM,MAAO2B,EAASsB,QAChB5C,SAAU,SAAAP,GACRmC,EAAK7D,MAAMuE,gBAAgB7C,EAAES,OAAOb,KAAMI,EAAES,OAAOP,WAIzDsC,EAAAjD,EAAAC,cAAA,OAAKG,UAAU,eACb6C,EAAAjD,EAAAC,cAAA,UAAQG,UAAU,gBAAgBI,QAASqC,KAAKZ,cAAhD,gBAGAgB,EAAAjD,EAAAC,cAAA,UAAQG,UAAU,gBAAgBI,QAASqC,KAAKhB,YAAhD,gBAGAoB,EAAAjD,EAAAC,cAAA,UAAQG,UAAU,gBAAgBI,QAASqC,KAAKH,aAAhD,0BApHWmB,aAyJRC,sBA3BS,SAAAC,GAAK,MAAK,CAChCzB,SAAU,CACRC,KAAMwB,EAAMC,KAAKC,gBAAgB1B,KACjC2B,OAAQH,EAAMC,KAAKC,gBAAgBC,OACnCC,QAASJ,EAAMC,KAAKC,gBAAgBE,QACpCP,QAASG,EAAMC,KAAKC,gBAAgBL,QACpCD,SAAUI,EAAMC,KAAKC,gBAAgBN,SACrC/D,QAASmE,EAAMC,KAAKC,gBAAgBrE,QACpCwD,UAAWW,EAAMC,KAAKC,gBAAgBb,UACtCG,QAASQ,EAAMC,KAAKC,gBAAgBV,SAEtCP,QAASe,EAAMC,KAAKhB,QACpBoB,aAAc,CACZnF,EAAG8E,EAAMC,KAAKI,aAAa,GAC3BlF,EAAG6E,EAAMC,KAAKI,aAAa,GAC3BjF,EAAG4E,EAAMC,KAAKI,aAAa,GAC3BhF,EAAG2E,EAAMC,KAAKI,aAAa,GAC3B/E,EAAG0E,EAAMC,KAAKI,aAAa,GAC3B9E,EAAGyE,EAAMC,KAAKI,aAAa,GAC3B7E,EAAGwE,EAAMC,KAAKI,aAAa,GAC3B5E,EAAGuE,EAAMC,KAAKI,aAAa,IAE7BzC,WAAYoC,EAAMM,QAAQ1C,WAC1BC,YAAamC,EAAMM,QAAQzC,YAC3BX,WAAY8C,EAAMM,QAAQpD,aAK1B,CACEe,sBACAW,cACAZ,mBACA0B,6BACAH,oBACAjB,mBARWyB,CAUbtC","file":"static/js/2.5a5296bd.chunk.js","sourcesContent":["import React from \"react\";\n\n\n\nconst RoomChoice =(props)=>{\n    const roomChoiceArray = {\n        1:\"会議室1\",\n        2:\"会議室2\",\n        3:\"会議室3\",\n        4:\"会議室4\",\n        5:\"会議室5\",\n        6:\"会議室6\",\n        7:\"会議室7\",\n        8:\"会議室8\",\n\n}\nconst choiceElements = []\nfor(let i in roomChoiceArray){\n    if(props.roomIds.indexOf(Number(i))>=0){\n    choiceElements.push(\n        <div class=\"box-roomChoice\">\n        <input type=\"checkbox\" className=\"select-input-01-checked\" name=\"room-choice\" id={`room-choice-${i}`}   onClick={(e)=>{props.roomCheckAction(i)}} value={i} checked/>\n        <label  className=\"select-label-01-checked\" onClick={(e)=>{props.roomCheckAction(i)}}>{roomChoiceArray[i]}</label>\n        </div>\n    )\n    }else{\n        choiceElements.push(\n        <div class=\"box-roomChoice\">\n        <input type=\"checkbox\" className=\"select-input-01\" name=\"room-choice\" id={`room-choice-${i}`} value={i}   onClick={(e)=>{props.roomCheckAction(i)}}/>\n        <label className=\"select-label-01\" onClick={(e)=>{props.roomCheckAction(i)}}>{roomChoiceArray[i]}</label>\n        </div>)\n    }\n\n}\n    return(\n        <div class=\"flex-row-100\">\n            {choiceElements.map((elem)=>{\n                return(elem);\n            })}\n        </div>\n    )\n}\n\nexport default RoomChoice;","import React from \"react\";\n\nconst TimeSelect = props => {\n  return (<select name={`time-select-${props.name}`} class=\"time-select-01\" onChange={(e)=>{props.onChange(props.name,props.targetDate + \" \" + e.target.value+\":00\")}}>\n  {props.timeList.map((time, index)=>{\n      if(props.initialValue==`${time}:00`){\n      return(<option value={time} selected class=\"time-option-01-selected\">{time}</option>)}\n      else{\n        return(<option value={time} class=\"time-option-01\">{time}</option>)\n      }\n  })}</select>);\n};\n\nexport default TimeSelect;","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport RoomChoice from \"../components/RoomChoice\";\nimport TimeSelect from \"../components/TimeSelect\";\nimport {\n  fetchAllSchedules,\n  sendPatch,\n  requestDelete\n} from \"../actions/api_actions\";\nimport {\n  toggleEditForm,\n  toggleRoomCheckInEditing,\n  changeEditValue\n} from \"../actions/form_actions\";\n\nclass EditForm extends Component {\n    targetDateTime = () =>{\n        return `${this.props.targetYear}-${this.props.targetMonth}-${\n        this.props.targetDate\n      }`\n    }\n  backAction = e => {\n    e.preventDefault();\n    this.props.toggleEditForm();\n    this.props.fetchAllSchedules(\n      this.targetDateTime()\n    );\n  };\n  deleteAction = e => {\n    e.preventDefault();\n    const promise = new Promise((resolve, reject) => {\n      this.props.requestDelete(this.props.schedule.uuid);\n      resolve();\n    });\n    promise.then(() => {\n      this.props.toggleEditForm();\n      this.props.fetchAllSchedules(\n        this.targetDateTime()\n      );\n      setTimeout(() => {\n        this.props.fetchAllSchedules(\n          this.targetDateTime()\n        );\n      }, 1500);\n    });\n  };\n  patchAction = e => {\n    e.preventDefault();\n\n    const promise = new Promise((resolve, reject) => {\n      this.props.sendPatch(this.props.schedule);\n      resolve();\n    });\n\n    promise.then(() => {\n      this.props.toggleEditForm();\n      this.props.fetchAllSchedules(\n        this.targetDateTime()\n      );\n      setTimeout(() => {\n        this.props.fetchAllSchedules(\n            this.targetDateTime()\n        );\n      }, 2000);\n    });\n  };\n  render() {\n    const schedule = this.props.schedule;\n    const formStyle = { display: \"none\" };\n    if (this.props.editing) {\n      formStyle.display = \"flex\";\n    }\n    return (\n      <div style={formStyle} className=\"box-editForm\">\n        <form className=\"form-simple-01\">\n          <div class=\"flex-row-90\">\n            <TimeSelect\n              name=\"startTime\"\n              initialValue={schedule.startTime.split(\" \")[1]}\n              timeList={this.props.timeList}\n              value={schedule.startTime}\n              onChange={this.props.changeEditValue}\n              targetDate={this.targetDateTime()}\n            />\n            から\n            <TimeSelect\n              name=\"endTime\"\n              initialValue={schedule.endTime.split(\" \")[1]}\n              timeList={this.props.timeList}\n              value={schedule.endTime}\n              onChange={this.props.changeEditValue}\n              targetDate={this.targetDateTime()}\n            />\n            まで\n          </div>\n          <div className=\"flex-row-90\">\n            <RoomChoice\n              roomIds={schedule.roomIds}\n              roomCheckAction={this.props.toggleRoomCheckInEditing}\n            />\n          </div>\n          <div className=\"flex-row-90\">\n            <input\n              type=\"text\"\n              className=\"input-text-01\"\n              placeholder=\"名前を入力してください\"\n              name=\"userName\"\n              value={schedule.userName}\n              onChange={e => {\n                this.props.changeEditValue(e.target.name, e.target.value);\n              }}\n            />\n          </div>\n          <div className=\"flex-row-90\">\n            <textarea\n              placeholder=\"内容を入力してください\"\n              className=\"input-text-02\"\n              name=\"content\"\n              value={schedule.content}\n              onChange={e => {\n                this.props.changeEditValue(e.target.name, e.target.value);\n              }}\n            />\n          </div>\n          <div className=\"flex-end-90\">\n            <button className=\"btn-simple-02\" onClick={this.deleteAction}>\n              削除\n            </button>\n            <button className=\"btn-simple-01\" onClick={this.backAction}>\n              戻る\n            </button>\n            <button className=\"btn-simple-03\" onClick={this.patchAction}>\n              変更\n            </button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  schedule: {\n    uuid: state.form.scheduleTouched.uuid,\n    edited: state.form.scheduleTouched.edited,\n    created: state.form.scheduleTouched.created,\n    content: state.form.scheduleTouched.content,\n    userName: state.form.scheduleTouched.userName,\n    roomIds: state.form.scheduleTouched.roomIds,\n    startTime: state.form.scheduleTouched.startTime,\n    endTime: state.form.scheduleTouched.endTime\n  },\n  editing: state.form.editing,\n  roomSelected: {\n    1: state.form.roomSelected[1],\n    2: state.form.roomSelected[2],\n    3: state.form.roomSelected[3],\n    4: state.form.roomSelected[4],\n    5: state.form.roomSelected[5],\n    6: state.form.roomSelected[6],\n    7: state.form.roomSelected[7],\n    8: state.form.roomSelected[8]\n  },\n  targetYear: state.general.targetYear,\n  targetMonth: state.general.targetMonth,\n  targetDate: state.general.targetDate\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    fetchAllSchedules,\n    sendPatch,\n    toggleEditForm,\n    toggleRoomCheckInEditing,\n    changeEditValue,\n    requestDelete\n  }\n)(EditForm);\n"],"sourceRoot":""}