{"version":3,"sources":["actions/types.js","components/FillingCell.js","components/BlankCell.js","components/ScheduleCell.js","components/ScheduleHeader.js","components/ScheduleRow.js","components/ScheduleTimeRow.js","containers/Schedules.js","App.js","serviceWorker.js","reducers/apiReducers.js","reducers/formReducers.js","reducers/generalReducers.js","reducers/index.js","store.js","Root.js","index.js","actions/form_actions.js","actions/general_action.js","actions/api_actions.js"],"names":["__webpack_require__","d","__webpack_exports__","TOGGLE_FORM_VISIBLE","SELECT_BLANK","SELECT_SCHEDULE","CHANGE_FORM_VALUE","CHANGE_EDIT_VALUE","TOGGLE_ROOM_CHECK","TOGGLE_EDIT_FORM","TOGGLE_ROOM_CHECK_IN_EDITING","REQUEST_DELETE","SEND_PATCH","SEND_POST","FETCH_ALL_SCHEDULES","UPDATE_TIME","SELECT_DATE","ADD_DATE","TO_TODAY","FillingCell","props","schedule","cellWidth","react_default","a","createElement","class","key","style","height","concat","cellHeight","ListItem_default","button","width","margin","padding","backgroundColor","borderRadius","boxSizing","zIndex","onClick","clickAction","uuid","userName","content","BlankCell","index","targetDatetime","time","roomId","className","ScheduleCell","components_BlankCell","postEvent","components_FillingCell","editEvent","ScheduleHeader","color","position","ScheduleRow","fillingList","i","push","scheduleList","Number","components_ScheduleHeader","map","components_ScheduleCell","timeList","ScheduleTimeRow","value","id","Schedules","_this","this","setInterval","fetchAllSchedules","targetYear","targetMonth","targetDate","updateTime","_this2","roomArray","roomIdOldArray","1","2","3","roomIdNewArray","4","5","6","7","8","Object","keys","forEach","components_ScheduleRow","schedules","selectSchedule","toggleEditForm","selectBlank","components_ScheduleTimeRow","elem","Component","connect","state","api","currentHour","general","currentMinute","toToday","App","datePicker","postForm","editForm","Promise","all","e","then","bind","DatePicker","default","EditForm","PostForm","setState","Fragment","containers_Schedules","Boolean","window","location","hostname","match","initialState","roomTouched","scheduleTouched","roomIds","startTime","endTime","edited","created","formVisible","editing","insertSchedule","roomSelected","currentYear","moment","format","currentMonth","currentDate","currentDay","isoWeekday","targetDay","parseDayToJa","Day","combineReducers","arguments","length","undefined","action","type","payload","form","stateNext","assign","target","k","v","indexOf","splice","roomIdsEditing","indexEditing","nextState","year","month","date","hour","minute","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","Root","es","children","ReactDOM","render","src_Root","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","changeFormValue","dispatch","_home_ogihara_react_sample_reserver_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","changeEditValue","add","toggleFormVisible","toggleRoomCheck","toggleRoomCheckInEditing","fetch","method","headers","Content-Type","response","ok","alert","Error","statusText","json","responseData","data","String","start_time","end_time","user_name","room_ids","_constructRoomSelected","selectDate","addDate","_types__WEBPACK_IMPORTED_MODULE_0__","moment__WEBPACK_IMPORTED_MODULE_1__","moment__WEBPACK_IMPORTED_MODULE_1___default","n","datetime","targetDateMoment","addNum","set","today","sendPatch","requestDelete","sendPost","urlBase","_getFromDate","schedulesLocal","_parseSchedules","patchData","body","JSON","stringify","postData","insertSchedules","sort","console","log","_constructInsertSchedules","insert_schedules","catch","error","url","schedulesArray","verticalStart","Math","floor"],"mappings":"wFAEAA,EAAAC,EAAAC,EAAA,sBAAAC,IAAAH,EAAAC,EAAAC,EAAA,sBAAAE,IAAAJ,EAAAC,EAAAC,EAAA,sBAAAG,IAAAL,EAAAC,EAAAC,EAAA,sBAAAI,IAAAN,EAAAC,EAAAC,EAAA,sBAAAK,IAAAP,EAAAC,EAAAC,EAAA,sBAAAM,IAAAR,EAAAC,EAAAC,EAAA,sBAAAO,IAAAT,EAAAC,EAAAC,EAAA,sBAAAQ,IAAAV,EAAAC,EAAAC,EAAA,sBAAAS,IAAAX,EAAAC,EAAAC,EAAA,sBAAAU,IAAAZ,EAAAC,EAAAC,EAAA,sBAAAW,IAAAb,EAAAC,EAAAC,EAAA,sBAAAY,IAAAd,EAAAC,EAAAC,EAAA,sBAAAa,IAAAf,EAAAC,EAAAC,EAAA,sBAAAc,IAAAhB,EAAAC,EAAAC,EAAA,sBAAAe,IAAAjB,EAAAC,EAAAC,EAAA,sBAAAgB,IACO,IAAMf,EAAsB,sBACtBC,EAAe,eACfC,EAAkB,kBAClBC,EAAoB,oBACpBC,EAAoB,oBACpBC,EAAoB,oBACpBC,EAAmB,mBACnBC,EAA+B,+BAK/BC,EAAiB,cACjBC,EAAa,aACbC,EAAY,YACZC,EAAsB,sBAGtBC,EAAc,cACdC,EAAc,cACdC,EAAW,WACXC,EAAW,iMC2BTC,EAhDK,SAAAC,GAClB,OAAgC,GAA5BA,EAAMC,SAASC,UAGfC,EAAAC,EAAAC,cAAA,OACEC,MAAM,aACNC,IAAKP,EAAMO,IACXC,MAAO,CACLC,OAAM,GAAAC,OAAiC,EAA5BV,EAAMC,SAASU,WAApB,UAI0B,GAA7BX,EAAMC,SAASU,WAEjBR,EAAAC,EAAAC,cAAA,YAGLF,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CACES,QAAM,EACNN,IAAKP,EAAMO,IACXC,MAAO,CACLM,MAAK,GAAAJ,OAAgC,IAA3BV,EAAMC,SAASC,UAApB,KACLa,OAAQ,EACRC,QAAS,EACTC,gBAAiB,UACjBC,aAAc,SACdC,UAAU,eAIZhB,EAAAC,EAAAC,cAAA,OACEC,MAAM,iBACNE,MAAO,CACLC,OAAM,GAAAC,OAAiC,EAA5BV,EAAMC,SAASU,WAApB,OACNS,OAAQ,GAEVC,QAAS,WACPrB,EAAMsB,YAAYtB,EAAMC,SAASsB,QAGnCpB,EAAAC,EAAAC,cAAA,OAAKC,MAAM,wBAAwBN,EAAMC,SAASuB,UAClDrB,EAAAC,EAAAC,cAAA,OAAKC,MAAM,wBAAwBN,EAAMC,SAASwB,YCP7CC,EAnCG,SAAA1B,GAChB,OAAIA,EAAM2B,MAAQ,GAAK,EAEnBxB,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CACEI,MAAO,CAAEM,MAAO,OAAQC,OAAQ,EAAGC,QAAS,GAC5CH,QAAM,EACNQ,QAAS,kBACPrB,EAAMsB,YAAN,GAAAZ,OACKV,EAAM4B,eADX,KAAAlB,OAC6BV,EAAM6B,MACjC7B,EAAM8B,SAGVvB,IAAKP,EAAM2B,OAEXxB,EAAAC,EAAAC,cAAA,OAAK0B,UAAU,iCAKjB5B,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CACEI,MAAO,CAAEM,MAAO,OAAQC,OAAQ,EAAGC,QAAS,GAC5CH,QAAM,EACNQ,QAAS,kBACPrB,EAAMsB,YAAN,GAAAZ,OACKV,EAAM4B,eADX,KAAAlB,OAC6BV,EAAM6B,MACjC7B,EAAM8B,SAGVvB,IAAKP,EAAM2B,OAEXxB,EAAAC,EAAAC,cAAA,OAAK0B,UAAU,iCCnBRC,EARK,SAAChC,GACjB,OAAmB,GAAhBA,EAAMC,SACEE,EAAAC,EAAAC,cAAC4B,EAAD,CAAW1B,IAAKP,EAAM2B,MAAOA,MAAO3B,EAAM2B,MAAOL,YAAatB,EAAMkC,UAAWL,KAAM7B,EAAM6B,KAAMD,eAAgB5B,EAAM4B,eAAgBE,OAAQ9B,EAAM8B,SAErJ3B,EAAAC,EAAAC,cAAC8B,EAAD,CAAa5B,IAAKP,EAAM2B,MAAO1B,SAAUD,EAAMC,SAAU0B,MAAO3B,EAAM2B,MAAOL,YAAatB,EAAMoC,aCChGC,EARO,SAACrC,GACnB,OACIG,EAAAC,EAAAC,cAAA,OAAKC,MAAM,qBAAqBE,MAAO,CAACS,gBAAgBjB,EAAMsC,QAC9DnC,EAAAC,EAAAC,cAAA,OAAKC,MAAM,uBAAX,qBAAqCN,EAAM8B,QAC3C3B,EAAAC,EAAAC,cAAA,OAAKC,MAAM,uBAAX,IAAmCN,EAAMuC,SAAzC,OCkCOC,EApCK,SAAAxC,GAElB,IADA,IAAMyC,EAAc,GACXC,EAAI,EAAGA,GAAK,GAAIA,IACvBD,EAAYE,MAAK,GAEnB,IAAMC,EAAe5C,EAAM4C,aAC3B,IAAK,IAAIrC,KAAOqC,EAEd,GADAH,EAAYlC,GAAOqC,EAAarC,GAC5BqC,EAAarC,GAAKI,WAAa,EACjC,IAAK,IAAI+B,EAAI,EAAGA,EAAIE,EAAarC,GAAKI,WAAY+B,IAChDD,EAAYI,OAAOtC,GAAOmC,GAAK,CAC7B/B,WAAY,GAKpB,OACER,EAAAC,EAAAC,cAAA,MAAIC,MAAM,mBACRH,EAAAC,EAAAC,cAACyC,EAAD,CAAgBhB,OAAQ9B,EAAM8B,OAAQQ,MAAOtC,EAAMsC,MAAOC,SAAUvC,EAAMuC,WACzEE,EAAYM,IAAI,SAAC9C,EAAU0B,GAC1B,OACExB,EAAAC,EAAAC,cAAC2C,EAAD,CACAlB,OAAQ9B,EAAM8B,OACZ7B,SAAUA,EACVM,IAAKoB,EACLA,MAAOA,EACPS,UAAWpC,EAAMoC,UACjBF,UAAWlC,EAAMkC,UACjBL,KAAM7B,EAAMiD,SAAStB,GACrBC,eAAgB5B,EAAM4B,qDCPnBsB,EAxBS,SAAClD,GACrB,IAAIsC,EAAQ,UACZ,OACInC,EAAAC,EAAAC,cAAA,MAAIC,MAAM,uBAEVH,EAAAC,EAAAC,cAAA,MAAIC,MAAM,uBAETN,EAAMiD,SAASF,IAAI,SAACI,EAAMxB,GAQvB,MAPU,SAAPwB,EACCb,EAAM,UACM,SAAPa,EACLb,EAAM,UACO,SAAPa,IACNb,EAAM,WAEPX,EAAM,GAAG,EACLxB,EAAAC,EAAAC,cAAA,MAAIC,MAAM,sCAAsCE,MAAO,CAACS,gBAAgBqB,GAAQc,GAAID,GAAQA,GAE5FhD,EAAAC,EAAAC,cAAA,MAAIC,MAAM,qCAAqCE,MAAO,CAACS,gBAAgBqB,GAAQc,GAAID,GAAQA,OCXxGE,+LACiB,IAAAC,EAAAC,KACnBC,YAAY,WAEVF,EAAKtD,MAAMyD,kBAAX,GAAA/C,OACK4C,EAAKtD,MAAM0D,WADhB,KAAAhD,OAC8B4C,EAAKtD,MAAM2D,YADzC,KAAAjD,OAEI4C,EAAKtD,MAAM4D,aAGfN,EAAKtD,MAAM6D,cACV,kDAGHN,KAAKvD,MAAMyD,kBAAX,GAAA/C,OACO6C,KAAKvD,MAAM0D,WADlB,KAAAhD,OACgC6C,KAAKvD,MAAM2D,YAD3C,KAAAjD,OAEM6C,KAAKvD,MAAM4D,8CAIV,IAAAE,EAAAP,KACDQ,EAAY,GACZC,EAAiB,CACrBC,EAAE,eACFC,EAAE,eACFC,EAAE,gBAEEC,EAAiB,CACrBC,EAAE,eACFC,EAAE,qBACFC,EAAE,2BACFC,EAAE,2BACFC,EAAE,4BAoCJ,OAlCCC,OAAOC,KAAKX,GAAgBY,QAAQ,SAAC9C,GACpCiC,EAAUpB,KACVxC,EAAAC,EAAAC,cAACwE,EAAD,CACAvC,MAAM,UACNC,SAAUyB,EAAelC,GACzBmB,SAAUa,EAAK9D,MAAMiD,SACnB1C,IAAKuB,EACLA,OAAQA,EACRc,aAAckB,EAAK9D,MAAM8E,UAAUhD,GACnCF,eAAc,GAAAlB,OAAOoD,EAAK9D,MAAM0D,WAAlB,KAAAhD,OAAgCoD,EAAK9D,MAAM2D,YAA3C,KAAAjD,OAA0DoD,EAAK9D,MAAM4D,YACnFxB,UAAW,SAACb,GACVuC,EAAK9D,MAAM+E,eAAexD,GAC1BuC,EAAK9D,MAAMgF,kBAEb9C,UAAW4B,EAAK9D,MAAMiF,iBAGzBP,OAAOC,KAAKP,GAAgBQ,QAAQ,SAAC9C,GACpCiC,EAAUpB,KACVxC,EAAAC,EAAAC,cAACwE,EAAD,CACAvC,MAAM,UACNC,SAAU6B,EAAetC,GACzBmB,SAAUa,EAAK9D,MAAMiD,SACnB1C,IAAKuB,EACLA,OAAQA,EACRc,aAAckB,EAAK9D,MAAM8E,UAAUhD,GACnCF,eAAc,GAAAlB,OAAOoD,EAAK9D,MAAM0D,WAAlB,KAAAhD,OAAgCoD,EAAK9D,MAAM2D,YAA3C,KAAAjD,OAA0DoD,EAAK9D,MAAM4D,YACnFxB,UAAW,SAACb,GACVuC,EAAK9D,MAAM+E,eAAexD,GAC1BuC,EAAK9D,MAAMgF,kBAEb9C,UAAW4B,EAAK9D,MAAMiF,iBAIxB9E,EAAAC,EAAAC,cAAA,OAAKC,MAAM,iBACXH,EAAAC,EAAAC,cAAC6E,EAAD,CAAiBjC,SAAUM,KAAKvD,MAAMiD,WACnCc,EAAUhB,IAAI,SAAAoC,GACb,OAAQA,YAvEMC,aAuFTC,cATS,SAAAC,GAAK,MAAK,CAChCR,UAAWQ,EAAMC,IAAIT,UACrBU,YAAaF,EAAMG,QAAQD,YAC3BE,cAAeJ,EAAMG,QAAQC,cAC7BhC,WAAY4B,EAAMG,QAAQ/B,WAC1BC,YAAa2B,EAAMG,QAAQ9B,YAC3BC,WAAY0B,EAAMG,QAAQ7B,aAK1B,CAAEH,sBAAmBwB,gBAAaF,mBAAgBlB,eAAY8B,YAAUX,oBAF3DK,CAGbhC,GC9FIJ,EAAW,CACf,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,SAgCa2C,6MA5BbN,MAAQ,CACNO,WAAW,KACXC,SAAS,KACTC,SAAS,iOAG0BC,QAAAC,IAAA,CAAArH,EAAAsH,EAAA,GAAAtH,EAAAsH,EAAA,KAAAC,KAAAvH,EAAAwH,KAAA,kCAApBC,IAARC,iBAC0B1H,EAAAsH,EAAA,GAAAC,KAAAvH,EAAAwH,KAAA,kCAAlBG,IAARD,kBAC0B1H,EAAAsH,EAAA,GAAAC,KAAAvH,EAAAwH,KAAA,4BAAlBI,IAARF,QACP/C,KAAKkD,SAAS,CACZZ,WAAW1F,EAAAC,EAAAC,cAACgG,EAAD,MACXN,SAAS5F,EAAAC,EAAAC,cAACkG,EAAD,CAAUtD,SAAUA,IAC7B6C,SAAS3F,EAAAC,EAAAC,cAACmG,EAAD,CAAUvD,SAAUA,0IAI/B,OACE9C,EAAAC,EAAAC,cAACF,EAAAC,EAAMsG,SAAP,KACGnD,KAAK+B,MAAMO,YAAY1F,EAAAC,EAAAC,cAAA,gDACxBF,EAAAC,EAAAC,cAACsG,EAAD,CAAW1D,SAAUA,IACpBM,KAAK+B,MAAMQ,UAAU3F,EAAAC,EAAAC,cAAA,gDACrBkD,KAAK+B,MAAMS,UAAU5F,EAAAC,EAAAC,cAAA,wDAtBZ+E,aC/CEwB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,6ECPAC,EAAe,CACjBnC,UAAW,CACPb,EAAE,GACFC,EAAE,GACFC,EAAE,GACFE,EAAE,GACFC,EAAE,GACFC,EAAE,GACFC,EAAE,GACFC,EAAE,KCPJwC,EAAe,CACnBC,YAAa,EACbC,gBAAiB,CACf5F,KAAM,GACN6F,QAAS,GACTC,UAAW,sBACXC,QAAS,sBACT9F,SAAU,GACVC,QAAS,GACT8F,OAAQ,GACRC,QAAS,IAEXC,aAAa,EACbC,SAAS,EACTC,eAAgB,CACdP,QAAS,GACTC,UAAW,sBACXC,QAAS,sBACT9F,SAAU,GACVC,QAAS,IAEXmG,aAAc,CACZ3D,GAAG,EACHC,GAAG,EACHC,GAAG,EACHE,GAAG,EACHC,GAAG,EACHC,GAAG,EACHC,GAAG,EACHC,GAAG,oBCtCDwC,EAAe,CACnBY,YAAaC,MAASC,OAAO,QAC7BC,aAAcF,MAASC,OAAO,MAC9BE,YAAaH,MAASC,OAAO,MAC7BG,WAAYJ,MAASK,aACrB3C,YAAasC,MAASC,OAAO,MAC7BrC,cAAeoC,MAASC,OAAO,MAC/BrE,WAAYoE,MAASC,OAAO,QAC5BpE,YAAamE,MAASC,OAAO,MAC7BK,UAAWC,EAAaP,MAASK,cACjCvE,WAAYkE,MAASC,OAAO,OAG9B,SAASM,EAAaC,GACpB,OAAQA,GACN,KAAK,EACH,MAAO,SACT,KAAK,EACH,MAAO,SACT,KAAK,EACH,MAAO,SACT,KAAK,EACH,MAAO,SACT,KAAK,EACH,MAAO,SACT,KAAK,EACH,MAAO,SACT,KAAK,EACH,MAAO,UAIE,IC5BAC,cAAgB,CAC3BhD,IHgBW,WAAmC,IAA1BD,EAA0BkD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAApBvB,EAAa0B,EAAOH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC9C,OAAOC,EAAOC,MACV,KAAKlJ,IACL,MAAO,CAACoF,UAAU6D,EAAOE,SACzB,KAAKtJ,IAAeC,IAAWC,IAE/B,QACA,OAAO6F,IGtBXwD,KFoCW,WAAuC,IAA9BxD,EAA8BkD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtBvB,EAAc0B,EAAQH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC9CK,EAAYrE,OAAOsE,OAAO,GAAI1D,GACpC,OAAQqD,EAAOC,MACb,KAAKvJ,IAsBH,OArBA0J,EAAUrB,SAAWqB,EAAUrB,QAC/BqB,EAAUnB,aAAe,CACvB3D,GAAG,EACHC,GAAG,EACHC,GAAG,EACHE,GAAG,EACHC,GAAG,EACHC,GAAG,EACHC,GAAG,EACHC,GAAG,GAELsE,EAAU5B,gBAAgB,CACxB5F,KAAM,GACN6F,QAAS,GACTC,UAAW,sBACXC,QAAS,sBACT9F,SAAU,GACVC,QAAS,GACT8F,OAAQ,GACRC,QAAS,IAEJuB,EACT,KAAK9J,IACH8J,EAAUrB,SAAU,EACpB,IAAMP,EAAkBwB,EAAOE,QAAP,SAGxB,OAFAE,EAAU5B,gBAAkBA,EAC5B4B,EAAUnB,aAAee,EAAOE,QAAP,aAClBE,EACT,KAAK7J,IACH,IAAM+J,EAASN,EAAOE,QAAQI,OACxB9F,EAAQwF,EAAOE,QAAQ1F,MAE7B,OADA4F,EAAUpB,eAAesB,GAAU9F,EAC5B4F,EACT,KAAK5J,IACH,IAAM+J,EAAIP,EAAOE,QAAQI,OACnBE,EAAIR,EAAOE,QAAQ1F,MAGzB,OAFA4F,EAAU5B,gBAAgB+B,GAAKC,EAExBJ,EACT,KAAK/J,IAMH,OALA+J,EAAUpB,eAAeP,QAAU,CAACuB,EAAOE,QAAQ/G,QACnDiH,EAAUnB,aAAae,EAAOE,QAAQ/G,SAAU,EAChDiH,EAAUpB,eAAeN,UAAYsB,EAAOE,QAAQxB,UACpD0B,EAAUpB,eAAeL,QAAUqB,EAAOE,QAAQvB,QAClDyB,EAAUtB,aAAc,EACjBsB,EACT,KAAKhK,IAkBH,OAjBAgK,EAAUnB,aAAe,CACvB3D,GAAG,EACHC,GAAG,EACHC,GAAG,EACHE,GAAG,EACHC,GAAG,EACHC,GAAG,EACHC,GAAG,EACHC,GAAG,GAELsE,EAAUpB,eAAgB,CACxBP,QAAS,GACTC,UAAW,sBACXC,QAAS,sBACT9F,SAAU,GACVC,QAAS,IACTsH,EAAUtB,aAAesB,EAAUtB,YAC9BsB,EACT,KAAK3J,IACH,IAAMgI,EAAUuB,EAAOE,QACvBE,EAAUnB,aAAaR,IAAY2B,EAAUnB,aAAaR,GAC1D,IAAMzF,EAAQoH,EAAUpB,eAAeP,QAAQgC,QAAQhC,GAQvD,OAPIzF,GAAS,EAEXoH,EAAUpB,eAAeP,QAAQiC,OAAO1H,EAAO,GAG/CoH,EAAUpB,eAAeP,QAAQzE,KAAKgG,EAAOE,SAExCE,EACT,KAAKzJ,IAEH,IAAMgK,EAAiBX,EAAOE,QAE9BE,EAAUnB,aAAa0B,IAAmBP,EAAUnB,aAClD0B,GAGF,IAAMC,EAAeR,EAAU5B,gBAAgBC,QAAQgC,QACrDE,GAUF,OARIC,GAAgB,EAElBR,EAAU5B,gBAAgBC,QAAQiC,OAAOE,EAAc,GAGvDR,EAAU5B,gBAAgBC,QAAQzE,KAAK2G,GAGlCP,EACT,QACE,OAAOrE,OAAOsE,OAAO,GAAI1D,KEzI3BG,QDyBW,WAAuC,IAA9BH,EAA8BkD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtBvB,EAAc0B,EAAQH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC9Cc,EAAY9E,OAAOsE,OAAO,GAAI1D,GACpC,OAAQqD,EAAOC,MACb,KAAKjJ,IAOH,OANA6J,EAAUtB,WAAaG,EAAaM,EAAOE,QAAQV,YACnDqB,EAAU3B,YAAcc,EAAOE,QAAQY,KACvCD,EAAUxB,aAAeW,EAAOE,QAAQa,MACxCF,EAAUvB,YAAcU,EAAOE,QAAQc,KACvCH,EAAUhE,YAAcmD,EAAOE,QAAQe,KACvCJ,EAAU9D,cAAgBiD,EAAOE,QAAQgB,OAClCL,EACT,KAAK5J,IAML,KAAKC,IAOL,KAAKC,IAKH,OAJA0J,EAAU9F,WAAaiF,EAAOE,QAAQY,KACtCD,EAAU7F,YAAcgF,EAAOE,QAAQa,MACvCF,EAAU5F,WAAa+E,EAAOE,QAAQc,KACtCH,EAAUpB,UAAYC,EAAaM,EAAOE,QAAQV,YAC3CqB,EACT,QACE,OAAOA,ME3DPM,EAAa,OAACC,GAYLC,EATDC,YACVC,EALiB,GAOjBC,YACIC,IAAeC,WAAf,EAAmBP,KCDZQ,EAPF,SAACtK,GACV,OACIG,EAAAC,EAAAC,cAACkK,EAAA,EAAD,CAAUP,MAAOA,GAChBhK,EAAMwK,WCDfC,IAASC,OAAOvK,EAAAC,EAAAC,cAACsK,EAAD,KAAMxK,EAAAC,EAAAC,cAACuK,EAAD,OAAgBC,SAASC,eAAe,SPkHxD,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM9E,KAAK,SAAA+E,GACjCA,EAAaC,mVQ/GNC,EAAkB,SAACnC,EAAQ9F,GAAT,OAAmB,SAAAkI,GAChDA,EAAS,CACPzC,KAAM1J,IACN2J,QAAQnE,OAAA4G,EAAA,EAAA5G,CAAA,CAAGuE,OAAQA,EAAQ9F,SAApB,QAA2BA,OAGzBoI,EAAkB,SAACtC,EAAQ9F,GAAT,OAAmB,SAAAkI,GAChDA,EAAS,CACPzC,KAAMzJ,IACN0J,QAAS,CAAEI,OAAQA,EAAQ9F,MAAOA,OAGzB8B,EAAc,SAACoC,EAAWvF,GAAZ,OAAuB,SAAAuJ,GAChDA,EAAS,CACPzC,KAAM5J,IACN6J,QAAS,CACPxB,UAAWS,IAAOT,GAAWU,OAAO,uBACpCT,QAAQQ,IAAOT,GAAWmE,IAAI,GAAG,KAAKzD,OAAO,uBAC7CjG,OAAQe,OAAOf,QAIR2J,EAAoB,kBAAM,SAAAJ,GACrCA,EAAS,CACPzC,KAAM7J,IACN8J,QAAS,OAIA6C,EAAkB,SAAA5J,GAAM,OAAI,SAAAuJ,GACvCA,EAAS,CACPzC,KAAMxJ,IACNyJ,QAAShG,OAAOf,OAGP6J,EAA2B,SAAA7J,GAAM,OAAI,SAAAuJ,GAChDA,EAAS,CACPzC,KAAMtJ,IACNuJ,QAAShG,OAAOf,OAePiD,EAAiB,SAAAxD,GAAI,OAAI,SAAA8J,GAEpCO,MAAM,wBAA0BrK,EAAM,CACpCsK,OAAQ,MACRC,QAAS,CACPC,eAAgB,sBAEjB5F,KAAK,SAAA6F,GACJ,IAAKA,EAASC,GAEZ,MADAC,MAAM,4JACAC,MAAMH,EAASI,YAEvB,OAAOJ,EAASK,SAEjBlG,KAAK,SAAAmG,GACJ,IAAMC,EAAOD,EAAY,SAYzB,MAXiB,CACf/K,KAAMgL,EAAKhL,KACX8F,UAAWS,IAAO0E,OAAOD,EAAKE,aAAa1E,OAAO,uBAClDT,QAASQ,IAAO0E,OAAOD,EAAKG,WAAW3E,OAAO,uBAC9CvG,SAAU+K,EAAKI,UACflL,QAAS8K,EAAK9K,QACd+F,QAAS+E,EAAK/E,QACdD,OAAQgF,EAAKhF,OACbH,QAAQmF,EAAKK,YAKhBzG,KAAK,SAAAlG,GACJoL,EAAS,CACPzC,KAAM3J,IACN4J,QAAS,CACP5I,SAASA,EACT2H,aA7CqB,SAACR,GAE9B,IADA,IAAMQ,EAAe,GACblF,EAAE,EAAEA,GAAG,EAAEA,IACZ0E,EAAQgC,QAAQ1G,IAAI,EACrBkF,EAAalF,IAAK,EAElBkF,EAAalF,IAAG,EAGpB,OAAOkF,EAoCciF,CAAuB5M,EAASmH,gBAK1CpC,EAAiB,kBAAM,SAAAqG,GAClCA,EAAS,CACPzC,KAAMvJ,IACNwJ,QAAS,wCC3GbjK,EAAAC,EAAAC,EAAA,sBAAA+E,IAAAjF,EAAAC,EAAAC,EAAA,sBAAAgO,IAAAlO,EAAAC,EAAAC,EAAA,sBAAAiO,IAAAnO,EAAAC,EAAAC,EAAA,sBAAA6G,IAAA,IAAAqH,EAAApO,EAAA,GAAAqO,EAAArO,EAAA,GAAAsO,EAAAtO,EAAAuO,EAAAF,GAEapJ,EAAa,kBAAM,SAAAwH,GAC9B,IAAM+B,EAAWtF,MACfuD,EAAS,CACTzC,KAAMjJ,IACNkJ,QAAS,CACLV,WAAWiF,EAASjF,aACpBsB,KAAK2D,EAASrF,OAAO,QACrB2B,MAAM0D,EAASrF,OAAO,MACtB4B,KAAKyD,EAASrF,OAAO,MACrB6B,KAAKwD,EAASrF,OAAO,MACrB8B,OAAOuD,EAASrF,OAAO,WAKlB+E,EAAa,SAAClJ,GAAD,OAAe,SAAAyH,GACrC,IAAMgC,EAAmBvF,IAAOlE,GAChCyH,EAAS,CACLzC,KAAKhJ,IACLiJ,QAAQ,CACJY,KAAK4D,EAAiBtF,OAAO,QAC7B2B,MAAM2D,EAAiBtF,OAAO,MAC9B4B,KAAK0D,EAAiBtF,OAAO,MAC7BI,WAAWkF,EAAiBlF,kBAK3B4E,EAAU,SAACO,EAAO7D,EAAKC,EAAMC,GAAnB,OAA4B,SAAA0B,GAC/C,IAAMzJ,EAAiBkG,MAASyF,IAAI,CAChC9D,KAAMA,EACNC,MAAOA,EAAQ,EACfC,KAAMA,IAER/H,EAAe4J,IAAI8B,EAAO,OAC5BjC,EAAS,CACLzC,KAAK/I,IACLgJ,QAAQ,CACJY,KAAK7H,EAAemG,OAAO,QAC3B2B,MAAM9H,EAAemG,OAAO,MAC5B4B,KAAK/H,EAAemG,OAAO,MAC3BI,WAAWvG,EAAeuG,kBAKzBxC,EAAU,kBAAI,SAAA0F,GACtB,IAAMmC,EAAQ1F,MACduD,EAAS,CACLzC,KAAK9I,IACL+I,QAAQ,CACJY,KAAK+D,EAAMzF,OAAO,QAClB2B,MAAM8D,EAAMzF,OAAO,MACnB4B,KAAK6D,EAAMzF,OAAO,MAClBI,WAAWqF,EAAMrF,mDCxD9BvJ,EAAAC,EAAAC,EAAA,sBAAA2E,IAAA7E,EAAAC,EAAAC,EAAA,sBAAA2O,IAAA7O,EAAAC,EAAAC,EAAA,sBAAA4O,IAAA9O,EAAAC,EAAAC,EAAA,sBAAA6O,IAAA,IAAAX,EAAApO,EAAA,GAAAqO,EAAArO,EAAA,GAAAsO,EAAAtO,EAAAuO,EAAAF,GAWMW,EAAU,wBACV9B,EAAU,CACdC,eAAgB,oBAGLtI,EAAoB,SAAA2J,GAAQ,OAAI,SAAA/B,GAE3CwC,EAAaT,GAAUjH,KAAK,SAAAmG,GAC1B,IAAMwB,EAAiBC,EAAgBzB,EAAY,WAEnDjB,EAAS,CACPzC,KAAMlJ,IACNmJ,QAASiF,QAIFL,EAAY,SAAAO,GAAS,OAAI,SAAA3C,GACpC,IAAM4C,EAAOC,KAAKC,UAAU,CAC1BrJ,UAAW,CACTvD,KAAMyM,EAAUzM,KAChBE,QAASuM,EAAUvM,QACnBkL,UAAWqB,EAAUxM,SACrBoL,SAAUoB,EAAU5G,QACpBqF,WAAYuB,EAAU3G,UACtBqF,SAAUsB,EAAU1G,WAKxBsE,MAFYgC,gCAED,CAAE/B,OAAQ,MAAOC,QAASA,EAASmC,KAAMA,IACjD9H,KAAK,SAAA6F,GACJ,IAAKA,EAASC,GACZ,MAAME,MAAMH,EAASI,YAEvB,OAAOJ,IAER7F,KACCkF,EAAS,CACPzC,KAAMpJ,IACNqJ,QAAS,QAIJ6E,EAAgB,SAAAnM,GAAI,OAAI,SAAA8J,GACnC,IACM4C,EAAOC,KAAKC,UAAU,CAAE5M,KAAMA,IACpCqK,MAFYgC,gCAED,CAAE/B,OAAQ,SAAUC,QAASA,EAASmC,KAAMA,IACpD9H,KAAK,SAAA6F,GACJ,IAAKA,EAASC,GACZ,MAAME,MAAMH,EAASI,YAEvB,OAAOJ,IAER7F,KACCkF,EAAS,CACPzC,KAAMrJ,IACNsJ,QAAS,QA2CJ8E,EAAW,SAAAS,GAAQ,OAAI,SAAA/C,GAClC,IAAMgD,EAvC0B,SAAAD,GAChC,IAAMhH,EAAUgH,EAAShH,QAAQkH,OACjCC,QAAQC,IAAIpH,GACZ,IACIO,EADA0G,EAAkB,GAEhBpO,EAAW,CACf0M,UAAWyB,EAAS5M,SACpBC,QAAS2M,EAAS3M,QAClBgL,WAAY2B,EAAS/G,UACrBqF,SAAU0B,EAAS9G,QACnBsF,SAAU,IAEZ,IAAK,IAAIjL,KAASyF,EAChB,GAAa,GAATzF,EAEF1B,EAAS2M,SAASjK,KAAKyE,EAAQzF,QAC1B,KAAIyF,EAAQzF,GACjB,SAIIyF,EAAQzF,EAAQ,GAAK,GAAKyF,EAAQzF,GACpC1B,EAAS2M,SAASjK,KAAKyE,EAAQzF,KAM/BgG,EAAiBjD,OAAOsE,OAAO,GAAI/I,GACnCoO,EAAgB1L,KAAKgF,GACrB1H,EAAS2M,SAAW,CAACxF,EAAQzF,KAMnC,OADA0M,EAAgB1L,KAAK1C,GACdoO,EAGiBI,CAA0BL,GAE5CH,EAAOC,KAAKC,UAAU,CAAEO,iBAAkBL,IAEhDzC,MADYgC,gCACD,CAAE/B,OAAQ,OAAQC,QAASA,EAASmC,KAAMA,IAClD9H,KAAK,SAAA6F,GACJ,IAAKA,EAASC,GACZ,MAAME,MAAMH,EAASI,YAEvB,OAAOJ,IAER7F,KAAK,SAAA6F,GAEJ6B,EAAaO,EAAS/G,WAAWlB,KAAK,SAAAmG,GACpC,IAAMwB,EAAiBC,EAAgBzB,EAAY,WACnDjB,EAAS,CACPzC,KAAMnJ,IACNoJ,QAASiF,QAIda,MAAM,SAAAC,GACL1C,MAAM0C,OAINf,EAAe,SAAAT,GAEnB,IAAMxJ,EAAakE,IAAOsF,GACpByB,EACJjB,EAAO,YAAAlN,OACKkD,EAAWmE,OAAO,QADvB,KAAArH,OACkCkD,EAAWmE,OAClD,MAFK,KAAArH,OAGFkD,EAAWmE,OAAO,OACzB,OAAO6D,MAAMiD,EAAK,CAAEhD,OAAQ,QACzB1F,KAAK,SAAA6F,GACJ,IAAKA,EAASC,GACZ,MAAME,MAAMH,EAASI,YAEvB,OAAOJ,IAER7F,KAAK,SAAAmG,GACJ,OAAOA,EAAaD,UAIpB0B,EAAkB,SAAAe,GACtB,IAAMhB,EAAiB,CACrB7J,EAAG,GACHC,EAAG,GACHC,EAAG,GACHE,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,IAEL,IAAK,IAAI9C,KAASmN,EAAgB,CAEhC,IAAIvC,EAAOuC,EAAenN,GACtBJ,EAAOgL,EAAI,KACX/K,EAAW+K,EAAI,UACf9K,EAAU8K,EAAI,QACdlF,EAAYS,IAAOyE,EAAI,YACvBjF,EAAUQ,IAAOyE,EAAI,UACrBnF,EAAUmF,EAAI,SAAa+B,OAC3BpO,EAAYqM,EAAI,WAChB5L,EAAa4L,EAAI,YAEjBwC,EAC+B,EAAjClM,OAAOwE,EAAUU,OAAO,OACxBiH,KAAKC,MAAMpM,OAAOwE,EAAUU,OAAO,OAAS,IAC9C,IAAK,IAAIpG,KAASyF,EAAS,CACzB,IAAItF,EAASsF,EAAQzF,GACrBmM,EAAehM,GAAQiN,GAAiB,CACtCxN,KAAMA,EACNO,OAAQA,EACRuF,UAAWA,EACXC,QAASA,EACT9F,SAAUA,EACVC,QAASA,EACTd,WAAYA,GAGdmN,EAAehM,GAAQiN,GAAe7O,UAAYA,EAClDA,EAAY,GAGhB,OAAO4N","file":"static/js/main.e04d7ba0.chunk.js","sourcesContent":["\n\n// Formが変化する\nexport const TOGGLE_FORM_VISIBLE = 'TOGGLE_FORM_VISIBLE';\nexport const SELECT_BLANK = 'SELECT_BLANK';\nexport const SELECT_SCHEDULE = 'SELECT_SCHEDULE';\nexport const CHANGE_FORM_VALUE = 'CHANGE_FORM_VALUE';\nexport const CHANGE_EDIT_VALUE = 'CHANGE_EDIT_VALUE';\nexport const TOGGLE_ROOM_CHECK = 'TOGGLE_ROOM_CHECK';\nexport const TOGGLE_EDIT_FORM = 'TOGGLE_EDIT_FORM';\nexport const TOGGLE_ROOM_CHECK_IN_EDITING = 'TOGGLE_ROOM_CHECK_IN_EDITING'\n\n\n// 通信\n\nexport const REQUEST_DELETE = 'SEND_DELETE';\nexport const SEND_PATCH = 'SEND_PATCH';\nexport const SEND_POST = 'SEND_POST';\nexport const FETCH_ALL_SCHEDULES = 'FETCH_ALL_SCHEDULES';\n\n// 一般\nexport const UPDATE_TIME = 'UPDATE_TIME';\nexport const SELECT_DATE = 'SELECT_DATE';\nexport const ADD_DATE = 'ADD_DATE';\nexport const TO_TODAY = 'TO_TODAY';\n\n\n\n\n\n","import React from \"react\";\nimport ListItem from \"@material-ui/core/ListItem\";\n\nconst FillingCell = props => {\n  if (props.schedule.cellWidth == 0) {\n    // 表示されない幅0のセル\n    return (\n      <div\n        class=\"cell-under\"\n        key={props.key}\n        style={{\n          height: `${props.schedule.cellHeight * 5}rem`\n        }}\n      />\n    );\n  } else if (props.schedule.cellHeight == 0) {\n    // 表示されない高さ0のセル\n    return <div />;\n  } else {\n    return (\n      <ListItem\n        button\n        key={props.key}\n        style={{\n          width: `${props.schedule.cellWidth * 100}%`,\n          margin: 0,\n          padding: 0,\n          backgroundColor: \"#00b8d4\",\n          borderRadius: \"0.4rem\",\n          boxSizing:\"border-box\",\n          \n        }}\n      >\n        <div\n          class=\"li-fillingCell\"\n          style={{\n            height: `${props.schedule.cellHeight * 5}rem`,\n            zIndex: 1\n          }}\n          onClick={() => {\n            props.clickAction(props.schedule.uuid);\n          }}\n        >\n          <div class=\"username-fillingCell\">{props.schedule.userName}</div>\n          <div class=\"contents-fillingCell\">{props.schedule.content}</div>\n        </div>\n      </ListItem>\n    );\n  }\n};\n\nexport default FillingCell;\n","import React from \"react\";\nimport ListItem from \"@material-ui/core/ListItem\";\nconst BlankCell = props => {\n  if (props.index % 2 == 0) {\n    return (\n      <ListItem\n        style={{ width: \"100%\", margin: 0, padding: 0 }}\n        button\n        onClick={() =>\n          props.clickAction(\n            `${props.targetDatetime} ${props.time}`,\n            props.roomId\n          )\n        }\n        key={props.index}\n      >\n        <div className=\"li-blankCell box-even-black\" />\n      </ListItem>\n    );\n  } else {\n    return (\n      <ListItem\n        style={{ width: \"100%\", margin: 0, padding: 0 }}\n        button\n        onClick={() =>\n          props.clickAction(\n            `${props.targetDatetime} ${props.time}`,\n            props.roomId\n          )\n        }\n        key={props.index}\n      >\n        <div className=\"li-blankCell box-odd-black\" />\n      </ListItem>\n    );\n  }\n};\nexport default BlankCell;\n","import React from 'react';\nimport FillingCell from './FillingCell';\nimport BlankCell from './BlankCell';\n\n\nconst ScheduleCell =(props)=>{\n    if(props.schedule==false){\n        return(<BlankCell key={props.index} index={props.index} clickAction={props.postEvent} time={props.time} targetDatetime={props.targetDatetime} roomId={props.roomId}/>)\n    }else{\n        return(<FillingCell key={props.index} schedule={props.schedule} index={props.index} clickAction={props.editEvent}/>)\n    }\n}\n\nexport default ScheduleCell;","import React from \"react\";\n\nconst ScheduleHeader =(props) =>{\n    return (\n        <div class=\"box-scheduleHeader\" style={{backgroundColor:props.color}}>\n        <div class=\"item-scheduleHeader\">会議室{props.roomId}</div>\n        <div class=\"item-scheduleHeader\">({props.position})</div>\n        </div>\n    )\n}\nexport default ScheduleHeader;","import React from \"react\";\nimport ScheduleCell from \"components/ScheduleCell\";\nimport ScheduleHeader from \"components/ScheduleHeader\";\n\nconst ScheduleRow = props => {\n  const fillingList = [];\n  for (let i = 1; i <= 49; i++) {\n    fillingList.push(false);\n  }\n  const scheduleList = props.scheduleList;\n  for (let key in scheduleList) {\n    fillingList[key] = scheduleList[key];\n    if (scheduleList[key].cellHeight > 1) {\n      for (let i = 1; i < scheduleList[key].cellHeight; i++) {\n        fillingList[Number(key) + i] = {\n          cellHeight: 0\n        };\n      }\n    }\n  }\n  return (\n    <ul class=\"box-scheduleRow\">\n      <ScheduleHeader roomId={props.roomId} color={props.color} position={props.position}/>\n      {fillingList.map((schedule, index) => {\n        return (\n          <ScheduleCell\n          roomId={props.roomId}\n            schedule={schedule}\n            key={index}\n            index={index}\n            editEvent={props.editEvent}\n            postEvent={props.postEvent}\n            time={props.timeList[index]}\n            targetDatetime={props.targetDatetime}\n          />\n        );\n      })}\n    </ul>\n  );\n};\nexport default ScheduleRow;\n","import React from \"react\";\n\nconst ScheduleTimeRow = (props) =>{\n    let color = \"#cfd8dc\";\n    return(\n        <ul class=\"box-scheduleTimeRow\">\n        \n        <li class=\"box-scheduleHeader\"></li>\n\n        {props.timeList.map((value,index)=>{\n            if(value==\"06:00\"){\n                color=\"#84ffff\"\n            }else if(value==\"12:00\"){\n                color=\"#ffd180\"\n            }else if (value==\"18:00\"){\n                color=\"#b388ff\"\n            }\n            if(index%2==0){\n            return(<li class=\"item-scheduleTimeRow box-even-black\" style={{backgroundColor:color}} id={value}>{value}</li>)\n        }else{\n            return(<li class=\"item-scheduleTimeRow box-odd-black\" style={{backgroundColor:color}} id={value}>{value}</li>)\n        }\n        })}\n        </ul>\n    )\n}\nexport default ScheduleTimeRow;","import React, { Component } from \"react\";\nimport ScheduleRow from \"../components/ScheduleRow\";\nimport { connect } from \"react-redux\";\nimport { fetchAllSchedules } from \"../actions/api_actions\";\nimport { selectBlank, selectSchedule,toggleEditForm } from \"../actions/form_actions\";\nimport { updateTime, toToday } from \"../actions/general_action\";\nimport ScheduleTimeRow from \"../components/ScheduleTimeRow\";\n\n\nclass Schedules extends Component {\n  componentWillMount() {\n    setInterval(() => {\n    //   2分ごとに実行\n      this.props.fetchAllSchedules(\n        `${this.props.targetYear}-${this.props.targetMonth}-${\n          this.props.targetDate\n        }`\n      );\n      this.props.updateTime();\n    }, 120000);\n  }\n  componentDidMount(){\n    this.props.fetchAllSchedules(\n        `${this.props.targetYear}-${this.props.targetMonth}-${\n          this.props.targetDate\n        }`\n      );\n  }\n  render() {\n    const roomArray = [];\n    const roomIdOldArray = {\n      1:\"最奥\",\n      2:\"中央\",\n      3:\"手前\"\n    }\n    const roomIdNewArray = {\n      4:\"窓側\",\n      5:\"窓手前\",\n      6:\"入口寄り\",\n      7:\"入口近く\",\n      8:\"入口手前\"\n    }\n    {Object.keys(roomIdOldArray).forEach((roomId)=>{\n      roomArray.push(\n      <ScheduleRow\n      color=\"#1b5e20\"\n      position={roomIdOldArray[roomId]}\n      timeList={this.props.timeList}\n        key={roomId}\n        roomId={roomId}\n        scheduleList={this.props.schedules[roomId]}\n        targetDatetime = {`${this.props.targetYear}-${this.props.targetMonth}-${this.props.targetDate}`}\n        editEvent={(uuid)=>{\n          this.props.selectSchedule(uuid);\n          this.props.toggleEditForm();\n        }}\n        postEvent={this.props.selectBlank}\n      />)\n    })}\n    {Object.keys(roomIdNewArray).forEach((roomId)=>{\n      roomArray.push(\n      <ScheduleRow\n      color=\"#bf360c\"\n      position={roomIdNewArray[roomId]}\n      timeList={this.props.timeList}\n        key={roomId}\n        roomId={roomId}\n        scheduleList={this.props.schedules[roomId]}\n        targetDatetime = {`${this.props.targetYear}-${this.props.targetMonth}-${this.props.targetDate}`}\n        editEvent={(uuid)=>{\n          this.props.selectSchedule(uuid);\n          this.props.toggleEditForm();\n        }}\n        postEvent={this.props.selectBlank}\n      />)\n    })}\n    return (\n      <div class=\"box-schedules\">\n      <ScheduleTimeRow timeList={this.props.timeList}/>\n        {roomArray.map(elem => {\n          return (elem);\n        })}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  schedules: state.api.schedules,\n  currentHour: state.general.currentHour,\n  currentMinute: state.general.currentMinute,\n  targetYear: state.general.targetYear,\n  targetMonth: state.general.targetMonth,\n  targetDate: state.general.targetDate\n});\n\nexport default connect(\n  mapStateToProps,\n  { fetchAllSchedules, selectBlank, selectSchedule, updateTime, toToday , toggleEditForm}\n)(Schedules);\n","import React, { Component } from \"react\";\nimport \"App.css\";\nimport \"./stylesheets/cell.css\";\nimport Schedules from \"containers/Schedules\";\n\nconst timeList = [\n  \"00:00\",\n  \"00:30\",\n  \"01:00\",\n  \"01:30\",\n  \"02:00\",\n  \"02:30\",\n  \"03:00\",\n  \"03:30\",\n  \"04:00\",\n  \"04:30\",\n  \"05:00\",\n  \"05:30\",\n  \"06:00\",\n  \"06:30\",\n  \"07:00\",\n  \"07:30\",\n  \"08:00\",\n  \"08:30\",\n  \"09:00\",\n  \"09:30\",\n  \"10:00\",\n  \"10:30\",\n  \"11:00\",\n  \"11:30\",\n  \"12:00\",\n  \"12:30\",\n  \"13:00\",\n  \"13:30\",\n  \"14:00\",\n  \"14:30\",\n  \"15:00\",\n  \"15:30\",\n  \"16:00\",\n  \"16:30\",\n  \"17:00\",\n  \"17:30\",\n  \"18:00\",\n  \"18:30\",\n  \"19:00\",\n  \"19:30\",\n  \"20:00\",\n  \"20:30\",\n  \"21:00\",\n  \"21:30\",\n  \"22:00\",\n  \"22:30\",\n  \"23:00\",\n  \"23:30\",\n  \"00:00\",\n];\n\nclass App extends Component{\n  state = {\n    datePicker:null,\n    postForm:null,\n    editForm:null,\n  }\n  async componentDidMount(){\n    const {default:DatePicker} = await import('containers/DatePicker');\n    const {default:EditForm} = await import('containers/EditForm');\n    const {default:PostForm} = await import('containers/PostForm');\n    this.setState({\n      datePicker:<DatePicker />,\n      editForm:<EditForm timeList={timeList}/>,\n      postForm:<PostForm timeList={timeList}/>\n    })\n  }\n  render(){\n    return (\n      <React.Fragment>\n        {this.state.datePicker||<div>読み込み中...</div>}\n        <Schedules timeList={timeList}/>\n        {this.state.postForm||<div>読み込み中...</div>}\n        {this.state.editForm||<div>読み込み中...</div>}\n        \n        </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n    SELECT_DATE,\n    REQUEST_DELETE,\n    SEND_PATCH,\n    SEND_POST,\n    FETCH_ALL_SCHEDULES\n  } from \"../actions/types\";\n\n\nconst initialState = {\n    schedules :{\n        1:{},\n        2:{},\n        3:{},\n        4:{},\n        5:{},\n        6:{},\n        7:{},\n        8:{},\n \n    },\n}\n\nexport default function(state=initialState,action){\n    switch(action.type){\n        case FETCH_ALL_SCHEDULES:\n        return {schedules:action.payload}\n        case REQUEST_DELETE,SEND_PATCH,SEND_POST:\n        return state\n        default:\n        return state\n}\n}","import {\n  TOGGLE_FORM_VISIBLE,\n  SELECT_BLANK,\n  SELECT_SCHEDULE,\n  CHANGE_FORM_VALUE,\n  CHANGE_EDIT_VALUE,\n  TOGGLE_ROOM_CHECK,\n  TOGGLE_EDIT_FORM,\n  TOGGLE_ROOM_CHECK_IN_EDITING\n} from \"../actions/types\";\n\nconst initialState = {\n  roomTouched: 0,\n  scheduleTouched: {\n    uuid: \"\",\n    roomIds: [],\n    startTime: \"0000-00-00 00:00:00\",\n    endTime: \"0000-00-00 00:00:00\",\n    userName: \"\",\n    content: \"\",\n    edited: \"\",\n    created: \"\"\n  },\n  formVisible: false,\n  editing: false,\n  insertSchedule: {\n    roomIds: [],\n    startTime: \"0000-00-00 00:00:00\",\n    endTime: \"0000-00-00 00:00:00\",\n    userName: \"\",\n    content: \"\"\n  },\n  roomSelected: {\n    1: false,\n    2: false,\n    3: false,\n    4: false,\n    5: false,\n    6: false,\n    7: false,\n    8: false\n  }\n};\n\nexport default function(state = initialState, action) {\n  const stateNext = Object.assign({}, state);\n  switch (action.type) {\n    case TOGGLE_EDIT_FORM:\n      stateNext.editing = !stateNext.editing;\n      stateNext.roomSelected = {\n        1: false,\n        2: false,\n        3: false,\n        4: false,\n        5: false,\n        6: false,\n        7: false,\n        8: false\n      };\n      stateNext.scheduleTouched={\n        uuid: \"\",\n        roomIds: [],\n        startTime: \"0000-00-00 00:00:00\",\n        endTime: \"0000-00-00 00:00:00\",\n        userName: \"\",\n        content: \"\",\n        edited: \"\",\n        created: \"\"\n      }\n      return stateNext;\n    case SELECT_SCHEDULE:\n      stateNext.editing = true;\n      const scheduleTouched = action.payload[\"schedule\"];\n      stateNext.scheduleTouched = scheduleTouched;\n      stateNext.roomSelected = action.payload[\"roomSelected\"];\n      return stateNext;\n    case CHANGE_FORM_VALUE:\n      const target = action.payload.target;\n      const value = action.payload.value;\n      stateNext.insertSchedule[target] = value;\n      return stateNext;\n    case CHANGE_EDIT_VALUE:\n      const k = action.payload.target;\n      const v = action.payload.value;\n      stateNext.scheduleTouched[k] = v;\n\n      return stateNext;\n    case SELECT_BLANK:\n      stateNext.insertSchedule.roomIds = [action.payload.roomId];\n      stateNext.roomSelected[action.payload.roomId] = true;\n      stateNext.insertSchedule.startTime = action.payload.startTime;\n      stateNext.insertSchedule.endTime = action.payload.endTime;\n      stateNext.formVisible = true;\n      return stateNext;\n    case TOGGLE_FORM_VISIBLE:\n      stateNext.roomSelected = {\n        1: false,\n        2: false,\n        3: false,\n        4: false,\n        5: false,\n        6: false,\n        7: false,\n        8: false\n      };\n      stateNext.insertSchedule= {\n        roomIds: [],\n        startTime: \"0000-00-00 00:00:00\",\n        endTime: \"0000-00-00 00:00:00\",\n        userName: \"\",\n        content: \"\"};\n        stateNext.formVisible = !stateNext.formVisible;\n      return stateNext;\n    case TOGGLE_ROOM_CHECK:\n      const roomIds = action.payload;\n      stateNext.roomSelected[roomIds] = !stateNext.roomSelected[roomIds];\n      const index = stateNext.insertSchedule.roomIds.indexOf(roomIds);\n      if (index >= 0) {\n        // すでに存在する場合削除\n        stateNext.insertSchedule.roomIds.splice(index, 1);\n      } else {\n        //まだない場合追加\n        stateNext.insertSchedule.roomIds.push(action.payload);\n      }\n      return stateNext;\n    case TOGGLE_ROOM_CHECK_IN_EDITING:\n      //タッチされたidを受け取る\n      const roomIdsEditing = action.payload;\n      // 値をトグル\n      stateNext.roomSelected[roomIdsEditing] = !stateNext.roomSelected[\n        roomIdsEditing\n      ];\n\n      const indexEditing = stateNext.scheduleTouched.roomIds.indexOf(\n        roomIdsEditing\n      );\n      if (indexEditing >= 0) {\n        // すでに存在する場合削除\n        stateNext.scheduleTouched.roomIds.splice(indexEditing, 1);\n      } else {\n        //まだない場合追加\n        stateNext.scheduleTouched.roomIds.push(roomIdsEditing);\n      }\n\n      return stateNext;\n    default:\n      return Object.assign({}, state);\n  }\n}\n","import { UPDATE_TIME, SELECT_DATE, ADD_DATE, TO_TODAY } from \"../actions/types\";\nimport moment from 'moment';\nconst initialState = {\n  currentYear: moment().format(\"YYYY\"),\n  currentMonth: moment().format(\"MM\"),\n  currentDate: moment().format(\"DD\"),\n  currentDay: moment().isoWeekday(),\n  currentHour: moment().format(\"HH\"),\n  currentMinute: moment().format(\"mm\"),\n  targetYear: moment().format(\"YYYY\"),\n  targetMonth: moment().format(\"MM\"),\n  targetDay: parseDayToJa(moment().isoWeekday()),\n  targetDate: moment().format(\"DD\")\n};\n\nfunction parseDayToJa(Day) {\n  switch (Day) {\n    case 1:\n      return \"月\";\n    case 2:\n      return \"火\";\n    case 3:\n      return \"水\";\n    case 4:\n      return \"木\";\n    case 5:\n      return \"金\";\n    case 6:\n      return \"土\";\n    case 7:\n      return \"日\";\n  }\n}\n\nexport default function(state = initialState, action) {\n  const nextState = Object.assign({}, state);\n  switch (action.type) {\n    case UPDATE_TIME:\n      nextState.currentDay = parseDayToJa(action.payload.isoWeekday);\n      nextState.currentYear = action.payload.year;\n      nextState.currentMonth = action.payload.month;\n      nextState.currentDate = action.payload.date;\n      nextState.currentHour = action.payload.hour;\n      nextState.currentMinute = action.payload.minute;\n      return nextState;\n    case SELECT_DATE:\n      nextState.targetYear = action.payload.year;\n      nextState.targetMonth = action.payload.month;\n      nextState.targetDate = action.payload.date;\n      nextState.targetDay = parseDayToJa(action.payload.isoWeekday);\n      return nextState;\n    case ADD_DATE:\n      \n      nextState.targetYear = action.payload.year\n      nextState.targetMonth = action.payload.month;\n      nextState.targetDate = action.payload.date;\n      nextState.targetDay = parseDayToJa(action.payload.isoWeekday);\n      return nextState;\n    case TO_TODAY:\n      nextState.targetYear = action.payload.year;\n      nextState.targetMonth = action.payload.month;\n      nextState.targetDate = action.payload.date;\n      nextState.targetDay = parseDayToJa(action.payload.isoWeekday);\n      return nextState;\n    default:\n      return nextState;\n  }\n}\n","import {combineReducers} from 'redux';\nimport apiReducers from './apiReducers';\nimport formReducers from './formReducers';\nimport generalReducers from './generalReducers';\nimport { createGenerateClassName } from '@material-ui/core';\n\nexport default combineReducers({\n    api:apiReducers,\n    form:formReducers,\n    general:generalReducers,\n})","import {createStore,applyMiddleware,compose} from 'redux';\nimport rootReducer from \"./reducers\";\nimport thunk from \"redux-thunk\";\n\n\nconst initialState = {};\nconst middleware = [thunk];\n\n\nconst store = createStore(\n    rootReducer,\n    initialState,\n    compose(\n        applyMiddleware(...middleware)\n       //,window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__() // Redux Dev Tool使用のための設定\n    )\n)\n\nexport default store;","import React from \"react\";\nimport store from \"./store\";\nimport { Provider } from \"react-redux\";\n\n\nconst Root = (props)=>{\n    return(\n        <Provider store={store}>\n        {props.children}\n        </Provider>\n    )\n}\nexport default Root;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Root from \"./Root\";\n\nReactDOM.render(<Root><App /></Root>, document.getElementById('root'));\nserviceWorker.unregister();\n","import {\n  TOGGLE_FORM_VISIBLE,\n  SELECT_BLANK,\n  SELECT_SCHEDULE,\n  CHANGE_FORM_VALUE,\n  CHANGE_EDIT_VALUE,\n  TOGGLE_ROOM_CHECK,\n  TOGGLE_ROOM_CHECK_IN_EDITING,\n  TOGGLE_EDIT_FORM\n} from \"../actions/types\";\nimport moment from \"moment\";\n\nexport const changeFormValue = (target, value) => dispatch => {\n  dispatch({\n    type: CHANGE_FORM_VALUE,\n    payload: { target: target, value, value }\n  });\n};\nexport const changeEditValue = (target, value) => dispatch => {\n  dispatch({\n    type: CHANGE_EDIT_VALUE,\n    payload: { target: target, value: value }\n  });\n};\nexport const selectBlank = (startTime, roomId) => dispatch => {\n  dispatch({\n    type: SELECT_BLANK,\n    payload: {\n      startTime: moment(startTime).format(\"YYYY-MM-DD HH:mm:00\"),\n      endTime:moment(startTime).add(30,\"m\").format(\"YYYY-MM-DD HH:mm:00\"),\n      roomId: Number(roomId)\n    }\n  });\n};\nexport const toggleFormVisible = () => dispatch => {\n  dispatch({\n    type: TOGGLE_FORM_VISIBLE,\n    payload: {}\n  });\n};\n\nexport const toggleRoomCheck = roomId => dispatch => {\n  dispatch({\n    type: TOGGLE_ROOM_CHECK,\n    payload: Number(roomId)\n  });\n};\nexport const toggleRoomCheckInEditing = roomId => dispatch => {\n  dispatch({\n    type: TOGGLE_ROOM_CHECK_IN_EDITING,\n    payload: Number(roomId)\n  });\n};\n\nconst _constructRoomSelected = (roomIds) =>{\n  const roomSelected = {};\n  for(let i=1;i<=8;i++){\n    if(roomIds.indexOf(i)>=0){\n      roomSelected[i] = true;\n    }else{\n      roomSelected[i]=false;\n    }\n  }\n  return roomSelected;\n}\nexport const selectSchedule = uuid => dispatch => {\n  \n  fetch(\"http://35.211.249.14/\" + uuid, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(response => {\n      if (!response.ok) {\n        alert(\"失敗しました.すでに存在しない予定の可能性があります.\")\n        throw Error(response.statusText);\n      }\n      return response.json();\n    })\n    .then(responseData => {\n      const data = responseData[\"schedule\"];\n      const schedule = {\n        uuid: data.uuid,\n        startTime: moment(String(data.start_time)).format(\"YYYY-MM-DD HH:mm:ss\"),\n        endTime: moment(String(data.end_time)).format(\"YYYY-MM-DD HH:mm:ss\"),\n        userName: data.user_name,\n        content: data.content,\n        created: data.created,\n        edited: data.edited,\n        roomIds:data.room_ids,\n        \n      };\n      return schedule;\n    })\n    .then(schedule => {\n      dispatch({\n        type: SELECT_SCHEDULE,\n        payload: {\n          schedule:schedule,\n          roomSelected:_constructRoomSelected(schedule.roomIds)}\n      });\n    });\n};\n\nexport const toggleEditForm = () => dispatch => {\n  dispatch({\n    type: TOGGLE_EDIT_FORM,\n    payload: {}\n  });\n};\n","import { UPDATE_TIME,SELECT_DATE,ADD_DATE,TO_TODAY } from \"./types\";\nimport moment from 'moment';\nexport const updateTime = () => dispatch => {\n  const datetime = moment();\n    dispatch({\n    type: UPDATE_TIME,\n    payload: {\n        isoWeekday:datetime.isoWeekday(),\n        year:datetime.format(\"YYYY\"),\n        month:datetime.format(\"MM\"),\n        date:datetime.format(\"DD\"),\n        hour:datetime.format(\"HH\"),\n        minute:datetime.format(\"mm\")\n    }\n  });\n};\n\nexport const selectDate = (targetDate) =>dispatch =>{\n    const targetDateMoment = moment(targetDate);\n    dispatch({\n        type:SELECT_DATE,\n        payload:{\n            year:targetDateMoment.format(\"YYYY\"),\n            month:targetDateMoment.format(\"MM\"),\n            date:targetDateMoment.format(\"DD\"),\n            isoWeekday:targetDateMoment.isoWeekday()\n        }\n    })\n}\n\nexport const addDate = (addNum,year,month,date) => dispatch =>{\n    const targetDatetime = moment().set({\n        year: year,\n        month: month - 1,\n        date: date\n      });\n      targetDatetime.add(addNum,\"day\")\n    dispatch({\n        type:ADD_DATE,\n        payload:{\n            year:targetDatetime.format(\"YYYY\"),\n            month:targetDatetime.format(\"MM\"),\n            date:targetDatetime.format(\"DD\"),\n            isoWeekday:targetDatetime.isoWeekday()\n        }\n\n    })\n}\nexport const toToday = ()=>dispatch =>{\n     const today = moment();\n     dispatch({\n         type:TO_TODAY,\n         payload:{\n             year:today.format(\"YYYY\"),\n             month:today.format(\"MM\"),\n             date:today.format(\"DD\"),\n             isoWeekday:today.isoWeekday()\n         },\n     }) \n}\n","import {\n  SELECT_DATE,\n  REQUEST_DELETE,\n  SEND_PATCH,\n  SEND_POST,\n  FETCH_ALL_SCHEDULES\n} from \"./types\";\nimport moment from 'moment';\n\n//import moment from \"moment\";\n\nconst urlBase = \"http://35.211.249.14/\";\nconst headers = {\n  \"Content-Type\": \"application/json\"\n};\n\nexport const fetchAllSchedules = datetime => dispatch => {\n  // データ取得\n  _getFromDate(datetime).then(responseData => {\n    const schedulesLocal = _parseSchedules(responseData[\"schedules\"]);\n    \n    dispatch({\n      type: FETCH_ALL_SCHEDULES,\n      payload: schedulesLocal\n    });\n  });\n};\nexport const sendPatch = patchData => dispatch => {\n  const body = JSON.stringify({\n    schedules: {\n      uuid: patchData.uuid,\n      content: patchData.content,\n      user_name: patchData.userName,\n      room_ids: patchData.roomIds,\n      start_time: patchData.startTime,\n      end_time: patchData.endTime\n    }\n  });\n  const url = urlBase + \"reserves\";\n\n  fetch(url, { method: \"PUT\", headers: headers, body: body })\n    .then(response => {\n      if (!response.ok) {\n        throw Error(response.statusText);\n      }\n      return response;\n    })\n    .then(\n      dispatch({\n        type: SEND_PATCH,\n        payload: {}\n      })\n    );\n};\nexport const requestDelete = uuid => dispatch => {\n  const url = urlBase + \"reserves\";\n  const body = JSON.stringify({ uuid: uuid });\n  fetch(url, { method: \"DELETE\", headers: headers, body: body })\n    .then(response => {\n      if (!response.ok) {\n        throw Error(response.statusText);\n      }\n      return response;\n    })\n    .then(\n      dispatch({\n        type: REQUEST_DELETE,\n        payload: {}\n      })\n    );\n  return;\n};\nconst _constructInsertSchedules = postData => {\n  const roomIds = postData.roomIds.sort();\n  console.log(roomIds);\n  let insertSchedules = [];\n  let insertSchedule;\n  const schedule = {\n    user_name: postData.userName,\n    content: postData.content,\n    start_time: postData.startTime,\n    end_time: postData.endTime,\n    room_ids: []\n  };\n  for (let index in roomIds) {\n    if (index == 0) {\n      // 一番目は比べようがないのでそのまま追加\n      schedule.room_ids.push(roomIds[index]);\n    } else if(!roomIds[index]){\n      continue\n    }else {\n\n      // 連続値ならそのまま追加\n      if (roomIds[index - 1] + 1 == roomIds[index]) {\n        schedule.room_ids.push(roomIds[index]);\n      } else {\n\n        // そうでない場合これまでの予定を配列に格納し\n        // room_idsキーの値を初期化\n \n        insertSchedule = Object.assign({}, schedule)\n        insertSchedules.push(insertSchedule);\n        schedule.room_ids = [roomIds[index]];\n      }\n    }\n  }\n  // 最後のscheduleオブジェクトはループの追加から外れているので追加\n  insertSchedules.push(schedule);\n  return insertSchedules;\n};\nexport const sendPost = postData => dispatch => {\n  const insertSchedules = _constructInsertSchedules(postData);\n\n  const body = JSON.stringify({ insert_schedules: insertSchedules });\n  const url = urlBase + \"reserves\";\n  fetch(url, { method: \"POST\", headers: headers, body: body })\n    .then(response => {\n      if (!response.ok) {\n        throw Error(response.statusText);\n      }\n      return response;\n    })\n    .then(response => {\n      // うまくPOSTできたらもう一度読み込みを行う\n      _getFromDate(postData.startTime).then(responseData => {\n        const schedulesLocal = _parseSchedules(responseData[\"schedules\"]);\n        dispatch({\n          type: SEND_POST,\n          payload: schedulesLocal\n        });\n      });\n    })\n    .catch(error => {\n      alert(error);\n    });\n};\n\nconst _getFromDate = datetime => {\n  // APIにアクセスして特定の日時のデータを取得\n  const targetDate = moment(datetime);\n  const url =\n    urlBase +\n    `reserves/${targetDate.format(\"YYYY\")}/${targetDate.format(\n      \"MM\"\n    )}/${targetDate.format(\"DD\")}`;\n  return fetch(url, { method: \"GET\" })\n    .then(response => {\n      if (!response.ok) {\n        throw Error(response.statusText);\n      }\n      return response;\n    })\n    .then(responseData => {\n      return responseData.json();\n    });\n};\n\nconst _parseSchedules = schedulesArray => {\n  const schedulesLocal = {\n    1: {},\n    2: {},\n    3: {},\n    4: {},\n    5: {},\n    6: {},\n    7: {},\n    8: {}\n  };\n  for (let index in schedulesArray) {\n    // 開始時間と終了時間からセルのサイズを算出する\n    let data = schedulesArray[index];\n    let uuid = data[\"uuid\"];\n    let userName = data[\"user_name\"];\n    let content = data[\"content\"];\n    let startTime = moment(data[\"start_time\"]);\n    let endTime = moment(data[\"end_time\"]);\n    let roomIds = data[\"room_ids\"].sort();\n    let cellWidth = data[\"cell_width\"];\n    let cellHeight = data[\"cell_height\"];\n\n    let verticalStart =\n      Number(startTime.format(\"HH\")) * 2 +\n      Math.floor(Number(startTime.format(\"mm\")) / 30);\n    for (let index in roomIds) {\n      let roomId = roomIds[index];\n      schedulesLocal[roomId][verticalStart] = {\n        uuid: uuid,\n        roomId: roomId,\n        startTime: startTime,\n        endTime: endTime,\n        userName: userName,\n        content: content,\n        cellHeight: cellHeight\n      };\n      // 一度目のiteration以外0になる\n      schedulesLocal[roomId][verticalStart].cellWidth = cellWidth;\n      cellWidth = 0;\n    }\n  }\n  return schedulesLocal;\n};\n"],"sourceRoot":""}